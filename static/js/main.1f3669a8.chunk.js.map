{"version":3,"sources":["lib/tileTypes.js","lib/factories/getNoiseFactory.js","lib/factories/getTileFactory.js","lib/Tile.js","lib/factories/getLinearNoiseFactory.js","lib/MapEntity.js","lib/chronicles/Actor.js","lib/chronicles/Town.js","lib/chronicles/Road.js","lib/chronicles/Culture.js","lib/chronicles/Chronicle.js","lib/chronicles/Adventurer.js","lib/Town.js","lib/stories/town/inhabit.js","lib/stories/town/children.js","lib/stories/town/marriages.js","lib/stories/town/death.js","lib/stories/town/governor.js","lib/Culture.js","lib/stories/culture/king.js","lib/stories/culture/town-creation.js","lib/stories/culture/new-settlement.js","lib/Road.js","lib/World.js","lib/utils/paintLine.js","lib/stories/world/culture-creation.js","AppContext.js","AppTime.js","Tabs.js","Actor.js","Dialog.js","TownNoblesTabContent.js","TownTitlesTabContent.js","ActorHistoryTabContent.js","TownDialog.js","AdventurerInfoTabContent.js","AdventurerFamilyTabContent.js","AdventurerDialog.js","CultureInfoTabContent.js","CultureTownsTabContent.js","CultureTitlesTabContent.js","CultureOpinionsTabContent.js","CultureDialog.js","App.js","index.js"],"names":["module","exports","MOUNTAIN_ICE","MOUNTAIN","HILL_ICE","HILL","HILL_SOIL","HILL_SWAMP","HILL_GRASS","HILL_SAND","PLAIN_ICE","PLAIN_SWAMP","PLAIN_FOREST","PLAIN_GRASS","PLAIN_SAND","PLAIN_MARSH","PLAIN_SOIL","PLAIN","WATER","WATER_ICE","OCEAN","OCEAN_ICE","makeRectangle","require","makeNoise2D","props","seed","width","height","octaves","amplitude","frequency","persistence","noise","x","y","Tile","getNoiseFactory","getLinearNoiseFactory","info","random","cache","getSandNoise","getRainfallNoise","getElevationNoise","getVegetationNoise","getTemperatureNoise","size","Math","floor","position","integer","min","max","id","sand","rainfall","elevation","vegetation","temperature","this","_","tileTypes","type","icon","color","backgroundColor","pickone","lighten","hex","getNoise","lowerLimit","higherLimit","MapEntity","world","_x","_y","_icon","_world","_color","_backgroundColor","registerMapEntity","sqrt","pow","Actor","entity","_type","_events","_entity","name","Object","keys","year","events","map","event","description","actors","reduce","actor","index","replaceAll","label","push","Town","Road","Culture","Chronicle","_actors","actorsProp","registerActors","forEach","add","Adventurer","fullName","culture","_culture","_id","guid","_adventurers","_creation","_name","Name","_settings","youths","_titles","governor","_cache","alive","toString","adventurer","adventurers","indexOf","splice","filter","isAlive","adventurersInfo","newAdventurers","adventurerInfo","createAdventurer","addAdventurers","town","creation","createAdventurers","Array","fill","birth","addEvent","AdventurerActor","TownActor","getAge","spouse","gender","genders","FEMALE","children","child","wifes","sort","wifeOne","wifeTwo","length","amount","slice","wife","husband","reproduce","childrenStory","MALE","males","females","spouses","possibleSpouses","ceil","shuffle","otherSpouse","find","possibleSpouse","extendedFamily","includes","otherSpousePosition","marriagesStory","deaths","killAdventurers","titles","deathStory","heir","childOne","childTwo","governorStory","_towns","king","townsInfo","newTowns","townInfo","getHabitableCoords","newTown","CultureActor","kingStory","towns","createTowns","townCreationStory","bool","likelihood","lookup","attempt","space","fromX","fromY","toX","toY","getMapEntityAt","newRoad","createRoad","RoadActor","newSettlementStory","tick","CultureGeneratorCulture","coordinates","_coordinates","World","canvas","offset","onTownSelection","_random","Chance","_roads","_year","_cultures","_chronicles","_offset","_canvas","_onTownSelection","_context","setupContext","handleClick","getTile","getTileFactory","mapEntities","Error","attempts","tile","xProp","yProp","chosenMapEntity","values","mapEntity","getDistance","getActor","entities","source","destination","xTo","xFrom","yTo","surroundingTiles","currentTile","weight","floating","newMap","diagonals","calculateG","nodeOne","nodeTwo","distance","tileOne","tileTwo","abs","reverse","pop","culturesInfo","newCulture","cultureInfo","positionX","positionY","ui","fillStyle","fillRect","fillText","context","strokeStyle","lineWidth","coordinate","beginPath","coords","lineTo","stroke","paintLine","road","cultures","createCultures","onClick","getContext","textAlign","font","lineCap","lineJoin","addEventListener","e","ev","rect","getBoundingClientRect","clientX","left","clientY","top","getCursorPosition","React","createContext","AppTime","useContext","AppContext","useState","setYear","useCallback","draw","useEffect","className","memo","Tabs","tabs","selectedTab","setSelectedTab","tabItems","useMemo","tab","classes","tabIndex","role","join","content","actorID","setSelectedActorInfo","chronicles","Dialog","onCloseProp","onClose","style","TownNoblesTabContent","TownTitlesTabContent","townProp","title","ActorHistoryTabContent","eventsDOM","years","getYear","placeholder","token","split","TownDialog","alt","src","AdventurerFamilyTabContent","adventurerProp","toWords","ToWords","dob","pronoun","age","convert","toLowerCase","parentsDOM","parents","son","father","mother","spouseDOM","appearance","bodyAttributes","soulAttributes","facets","siblings","grandparents","piblings","cousins","familyDOM","AdventurerDialog","AdventurerInfoTabContent","CultureInfoTabContent","cultureProp","ethics","beliefs","CultureTownsTabContent","CultureTitlesTabContent","CultureOpinionsTabContent","culturesDOM","otherCulture","getOpinion","CultureDialog","App","canvasRef","useRef","setWorld","selectedActorInfo","useLayoutEffect","current","window","onDialogClose","dialogDOM","Provider","value","ref","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.1f3669a8.chunk.js","sourcesContent":["module.exports = {\r\n  MOUNTAIN_ICE: \"MOUNTAIN_ICE\",\r\n  MOUNTAIN: \"MOUNTAIN\",\r\n\r\n  HILL_ICE: \"HILL_ICE\",\r\n  HILL: \"HILL\",\r\n  HILL_SOIL: \"HILL_SOIL\",\r\n  HILL_SWAMP: \"HILL_SWAMP\",\r\n  HILL_GRASS: \"HILL_GRASS\",\r\n  HILL_SAND: \"HILL_SAND\",\r\n\r\n  PLAIN_ICE: \"PLAIN_ICE\",\r\n  PLAIN_SWAMP: \"PLAIN_SWAMP\",\r\n  PLAIN_FOREST: \"PLAIN_FOREST\",\r\n  PLAIN_GRASS: \"PLAIN_GRASS\",\r\n  PLAIN_SAND: \"PLAIN_SAND\",\r\n  PLAIN_MARSH: \"PLAIN_MARSH\",\r\n  PLAIN_SOIL: \"PLAIN_SOIL\",\r\n  PLAIN: \"PLAIN\",\r\n\r\n  WATER: \"WATER\",\r\n  WATER_ICE: \"WATER_ICE\",\r\n\r\n  OCEAN: \"OCEAN\",\r\n  OCEAN_ICE: \"OCEAN_ICE\"\r\n};\r\n","const { makeRectangle } = require(\"fractal-noise\");\r\nconst { makeNoise2D } = require(\"open-simplex-noise\");\r\n\r\nmodule.exports = function getNoiseFactory(props = {}) {\r\n  const {\r\n    seed,\r\n    width,\r\n    height,\r\n    octaves = 10,\r\n    amplitude = 1,\r\n    frequency = 0.025,\r\n    persistence = 0.5\r\n  } = props;\r\n\r\n  const noise = makeRectangle(width, height, makeNoise2D(seed), {\r\n    octaves,\r\n    amplitude,\r\n    frequency,\r\n    persistence\r\n  });\r\n\r\n  return function getNoise(x, y) {\r\n    return noise[x][y] + 0.5;\r\n  };\r\n};\r\n","const Tile = require(\"../Tile\");\r\nconst getNoiseFactory = require(\"./getNoiseFactory\");\r\nconst getLinearNoiseFactory = require(\"./getLinearNoiseFactory\");\r\n\r\nmodule.exports = function getTileFactory(info) {\r\n  const { seed, width, height, random } = info;\r\n\r\n  const cache = {};\r\n\r\n  const getSandNoise = getNoiseFactory({\r\n    width,\r\n    height,\r\n    seed: seed * 10\r\n  });\r\n\r\n  const getRainfallNoise = getNoiseFactory({\r\n    width,\r\n    height,\r\n    seed: seed * 20\r\n  });\r\n\r\n  const getElevationNoise = getNoiseFactory({\r\n    width,\r\n    height,\r\n    seed: seed * 30\r\n  });\r\n\r\n  const getVegetationNoise = getNoiseFactory({\r\n    width,\r\n    height,\r\n    seed: seed * 40\r\n  });\r\n\r\n  const getTemperatureNoise = getLinearNoiseFactory({\r\n    width,\r\n    height,\r\n    seed: seed * 50,\r\n    size: Math.floor(height * 0.4),\r\n    position: random.integer({\r\n      min: Math.floor(height * 0.4),\r\n      max: Math.floor(height * 0.6)\r\n    })\r\n  });\r\n\r\n  return function getTile(x, y) {\r\n    const id = `${x}=${y}`;\r\n    if (cache[id] != null) return cache[id];\r\n\r\n    cache[id] = new Tile({\r\n      x,\r\n      y,\r\n      random,\r\n      sand: getSandNoise(x, y),\r\n      rainfall: getRainfallNoise(x, y),\r\n      elevation: getElevationNoise(x, y),\r\n      vegetation: getVegetationNoise(x, y),\r\n      temperature: getTemperatureNoise(x, y)\r\n    });\r\n\r\n    return cache[id];\r\n  };\r\n};\r\n","import color from \"color\";\r\n\r\nimport tileTypes from \"./tileTypes\";\r\n\r\nmodule.exports = class Tile {\r\n  constructor(props) {\r\n    const {\r\n      x,\r\n      y,\r\n      random,\r\n      sand = 0,\r\n      rainfall = 0,\r\n      elevation = 0,\r\n      vegetation = 0,\r\n      temperature = 0\r\n    } = props;\r\n\r\n    this._ = {\r\n      x,\r\n      y,\r\n\r\n      sand,\r\n      random,\r\n      rainfall,\r\n      elevation,\r\n      vegetation,\r\n      temperature\r\n    };\r\n  }\r\n\r\n  get id() {\r\n    return `${this.x}-${this.y}`;\r\n  }\r\n\r\n  get x() {\r\n    return this._.x;\r\n  }\r\n\r\n  get y() {\r\n    return this._.y;\r\n  }\r\n\r\n  get sand() {\r\n    return this._.sand;\r\n  }\r\n\r\n  get rainfall() {\r\n    return this._.rainfall;\r\n  }\r\n\r\n  get elevation() {\r\n    return this._.elevation;\r\n  }\r\n\r\n  get vegetation() {\r\n    return this._.vegetation;\r\n  }\r\n\r\n  get temperature() {\r\n    return this._.temperature;\r\n  }\r\n\r\n  get random() {\r\n    return this._.random;\r\n  }\r\n\r\n  get type() {\r\n    if (this.elevation > 0.9) {\r\n      return this.temperature < 0.4 && this.rainfall > 0.6\r\n        ? tileTypes.MOUNTAIN_ICE\r\n        : tileTypes.MOUNTAIN;\r\n    }\r\n\r\n    if (this.elevation > 0.8) {\r\n      if (this.temperature < 0.4) {\r\n        return this.rainfall > 0.6 ? tileTypes.HILL_ICE : tileTypes.HILL;\r\n      }\r\n\r\n      if (this.rainfall > 0.8) {\r\n        return tileTypes.HILL_SWAMP;\r\n      }\r\n\r\n      if (this.rainfall > 0.4) {\r\n        return this.vegetation > 0.6\r\n          ? tileTypes.HILL_GRASS\r\n          : tileTypes.HILL_SOIL;\r\n      }\r\n\r\n      return this.sand > 0.7 ? tileTypes.HILL_SAND : tileTypes.HILL;\r\n    }\r\n\r\n    if (this.elevation > 0.5) {\r\n      if (this.temperature < 0.4) {\r\n        return this.rainfall > 0.6 ? tileTypes.PLAIN_ICE : tileTypes.PLAIN;\r\n      }\r\n\r\n      if (this.rainfall > 0.8) {\r\n        return this.vegetation > 0.8\r\n          ? tileTypes.PLAIN_SWAMP\r\n          : tileTypes.PLAIN_MARSH;\r\n      }\r\n\r\n      if (this.rainfall > 0.4) {\r\n        return this.vegetation > 0.8\r\n          ? tileTypes.PLAIN_FOREST\r\n          : this.vegetation > 0.3\r\n          ? tileTypes.PLAIN_GRASS\r\n          : tileTypes.PLAIN_SOIL;\r\n      }\r\n\r\n      return this.sand > 0.7 ? tileTypes.PLAIN_SAND : tileTypes.PLAIN;\r\n    }\r\n\r\n    if (this.elevation > 0.4) {\r\n      return this.temperature > 0.4 ? tileTypes.WATER : tileTypes.WATER_ICE;\r\n    }\r\n\r\n    return this.temperature > 0.4 ? tileTypes.OCEAN : tileTypes.OCEAN_ICE;\r\n  }\r\n\r\n  get ui() {\r\n    let info = {};\r\n\r\n    switch (this.type) {\r\n      case tileTypes.MOUNTAIN_ICE: {\r\n        info = {\r\n          icon: \"⌂\",\r\n          color: \"#FFFFFF\",\r\n          backgroundColor: \"#222\"\r\n        };\r\n        break;\r\n      }\r\n      case tileTypes.MOUNTAIN: {\r\n        info = {\r\n          icon: \"⌂\",\r\n          color: \"#aaa\",\r\n          backgroundColor: \"#222\"\r\n        };\r\n        break;\r\n      }\r\n      case tileTypes.HILL_ICE: {\r\n        info = {\r\n          icon: \"∩\",\r\n          color: \"#FFFFFF\",\r\n          backgroundColor: \"#222\"\r\n        };\r\n        break;\r\n      }\r\n      case tileTypes.HILL: {\r\n        const backgroundColor = this.random.pickone([\"#444\", \"#333\"]);\r\n\r\n        info = {\r\n          icon: \"∩\",\r\n          color: color(backgroundColor).lighten(1.5).hex(),\r\n          backgroundColor: backgroundColor\r\n        };\r\n        break;\r\n      }\r\n      case tileTypes.HILL_SOIL: {\r\n        const backgroundColor = this.random.pickone([\"#1e1a15\", \"#27221b\"]);\r\n\r\n        info = {\r\n          icon: \"∩\",\r\n          color: color(backgroundColor).lighten(1.5).hex(),\r\n          backgroundColor: backgroundColor\r\n        };\r\n        break;\r\n      }\r\n      case tileTypes.HILL_SWAMP: {\r\n        const backgroundColor = this.random.pickone([\"#1b2413\", \"#192211\"]);\r\n\r\n        info = {\r\n          icon: \"∩\",\r\n          color: color(backgroundColor).lighten(1.5).hex(),\r\n          backgroundColor\r\n        };\r\n        break;\r\n      }\r\n      case tileTypes.HILL_GRASS: {\r\n        const backgroundColor = this.random.pickone([\"#2d3a22\", \"#25301c\"]);\r\n        info = {\r\n          icon: \"∩\",\r\n          color: color(backgroundColor).lighten(1.5).hex(),\r\n          backgroundColor\r\n        };\r\n        break;\r\n      }\r\n      case tileTypes.HILL_SAND: {\r\n        const backgroundColor = this.random.pickone([\"#483c1a\", \"#392f14\"]);\r\n\r\n        info = {\r\n          icon: \"∩\",\r\n          color: color(backgroundColor).lighten(1.5).hex(),\r\n          backgroundColor\r\n        };\r\n        break;\r\n      }\r\n      case tileTypes.PLAIN_ICE: {\r\n        const backgroundColor = this.random.pickone([\"#888\", \"#999\"]);\r\n\r\n        info = {\r\n          icon: \"≈\",\r\n          color: color(backgroundColor).lighten(1.5).hex(),\r\n          backgroundColor\r\n        };\r\n        break;\r\n      }\r\n      case tileTypes.PLAIN_SWAMP: {\r\n        const backgroundColor = this.random.pickone([\"#1b2413\", \"#192211\"]);\r\n\r\n        info = {\r\n          icon: this.random.pickone(['\"', \"⌠\"]),\r\n          color: color(backgroundColor).lighten(1.5).hex(),\r\n          backgroundColor\r\n        };\r\n        break;\r\n      }\r\n      case tileTypes.PLAIN_MARSH: {\r\n        const backgroundColor = this.random.pickone([\"#151a0f\", \"#171f0f\"]);\r\n\r\n        info = {\r\n          icon: this.random.pickone(['\"', \"ⁿ\"]),\r\n          color: color(backgroundColor).lighten(1.5).hex(),\r\n          backgroundColor\r\n        };\r\n        break;\r\n      }\r\n      case tileTypes.PLAIN_FOREST: {\r\n        const backgroundColor = this.random.pickone([\"#2d3a22\", \"#25301c\"]);\r\n\r\n        info = {\r\n          icon: this.random.pickone([\"♠\", \"♣\", \"↑\"]),\r\n          color: color(backgroundColor).lighten(1.5).hex(),\r\n          backgroundColor\r\n        };\r\n        break;\r\n      }\r\n      case tileTypes.PLAIN_GRASS: {\r\n        const backgroundColor = this.random.pickone([\"#2d3a22\", \"#25301c\"]);\r\n\r\n        info = {\r\n          icon: this.random.pickone([\"ⁿ\", \".\"]),\r\n          color: color(backgroundColor).lighten(1.5).hex(),\r\n          backgroundColor\r\n        };\r\n        break;\r\n      }\r\n      case tileTypes.PLAIN_SOIL: {\r\n        const backgroundColor = this.random.pickone([\"#1e1a15\", \"#27221b\"]);\r\n\r\n        info = {\r\n          icon: this.random.pickone([\"ⁿ\", \".\"]),\r\n          color: color(backgroundColor).lighten(1.5).hex(),\r\n          backgroundColor\r\n        };\r\n        break;\r\n      }\r\n      case tileTypes.PLAIN_SAND: {\r\n        const backgroundColor = this.random.pickone([\"#483c1a\", \"#392f14\"]);\r\n\r\n        info = {\r\n          icon: \"≈\",\r\n          color: color(backgroundColor).lighten(1.5).hex(),\r\n          backgroundColor\r\n        };\r\n        break;\r\n      }\r\n      case tileTypes.PLAIN: {\r\n        const backgroundColor = this.random.pickone([\"#444\", \"#555\"]);\r\n        info = {\r\n          icon: \".\",\r\n          color: color(backgroundColor).lighten(1.5).hex(),\r\n          backgroundColor\r\n        };\r\n        break;\r\n      }\r\n      case tileTypes.WATER: {\r\n        info = {\r\n          icon: \"~\",\r\n          color: \"#35506f\",\r\n          backgroundColor: \"#1d2d3f\"\r\n        };\r\n        break;\r\n      }\r\n      case tileTypes.WATER_ICE: {\r\n        info = {\r\n          icon: this.random.pickone([\"▒\", \"░\"]),\r\n          color: \"#35506f\",\r\n          backgroundColor: \"#1d2d3f\"\r\n        };\r\n        break;\r\n      }\r\n      case tileTypes.OCEAN: {\r\n        info = {\r\n          icon: \"≈\",\r\n          color: \"#304177\",\r\n          backgroundColor: \"#172331\"\r\n        };\r\n        break;\r\n      }\r\n      case tileTypes.OCEAN_ICE: {\r\n        info = {\r\n          icon: this.random.pickone([\"▒\", \"░\"]),\r\n          color: \"#35506f\",\r\n          backgroundColor: \"#1d2d3f\"\r\n        };\r\n        break;\r\n      }\r\n      default: {\r\n        info = {\r\n          icon: this.random.pickone([\"X\"]),\r\n          color: \"#ff00d4\",\r\n          backgroundColor: \"#ff00d4\"\r\n        };\r\n        break;\r\n      }\r\n    }\r\n\r\n    return info;\r\n  }\r\n};\r\n","const getNoiseFactory = require(\"./getNoiseFactory\");\r\n\r\nmodule.exports = function getLinearNoiseFactory(props) {\r\n  const { seed, size, width, height, position } = props;\r\n\r\n  const getNoise = getNoiseFactory({\r\n    seed,\r\n    width,\r\n    height\r\n  });\r\n\r\n  return function getLinearNoise(x, y) {\r\n    const lowerLimit = position - size;\r\n    const higherLimit = position + size;\r\n\r\n    if (y >= lowerLimit && y <= higherLimit) return 1;\r\n\r\n    return (\r\n      (y < lowerLimit\r\n        ? y / lowerLimit\r\n        : 1 - (y - higherLimit) / (height - higherLimit)) -\r\n      getNoise(x, y) / 2\r\n    );\r\n  };\r\n};\r\n","export default class MapEntity {\r\n  constructor(props) {\r\n    const { x, y, world, icon, color, backgroundColor } = props;\r\n\r\n    this._x = x;\r\n    this._y = y;\r\n    this._icon = icon;\r\n    this._world = world;\r\n    this._color = color;\r\n    this._backgroundColor = backgroundColor;\r\n\r\n    this._world.registerMapEntity(this);\r\n  }\r\n\r\n  get x() {\r\n    return this._x;\r\n  }\r\n\r\n  get y() {\r\n    return this._y;\r\n  }\r\n\r\n  get icon() {\r\n    return this._icon;\r\n  }\r\n\r\n  get color() {\r\n    return this._color;\r\n  }\r\n\r\n  get backgroundColor() {\r\n    return this._backgroundColor;\r\n  }\r\n\r\n  get ui() {\r\n    return {\r\n      icon: this._icon,\r\n      color: this._color,\r\n      backgroundColor: this._backgroundColor\r\n    };\r\n  }\r\n\r\n  getDistance(x, y) {\r\n    return Math.sqrt(Math.pow(x - this._x, 2) + Math.pow(y - this._y, 2));\r\n  }\r\n}\r\n","export default class Actor {\r\n  constructor(props) {\r\n    const { type, entity } = props;\r\n\r\n    this._type = type;\r\n    this._events = {};\r\n    this._entity = entity;\r\n  }\r\n\r\n  get type() {\r\n    return this._type;\r\n  }\r\n\r\n  get entity() {\r\n    return this._entity;\r\n  }\r\n\r\n  get id() {\r\n    return this._entity.id;\r\n  }\r\n\r\n  get label() {\r\n    return this._entity.name;\r\n  }\r\n\r\n  get years() {\r\n    return Object.keys(this._events);\r\n  }\r\n\r\n  getYear(year) {\r\n    const events = this._events[year];\r\n\r\n    return events == null\r\n      ? []\r\n      : events.map((event) => {\r\n          const description = event.actors.reduce(\r\n            (description, actor, index) => {\r\n              return description.replaceAll(`{${index}}`, actor.label);\r\n            },\r\n            event.description\r\n          );\r\n\r\n          return {\r\n            event,\r\n            description\r\n          };\r\n        });\r\n  }\r\n\r\n  add(event) {\r\n    let events = this._events[event.year];\r\n    if (events == null) events = this._events[event.year] = [];\r\n    events.push(event);\r\n  }\r\n}\r\n","import Actor from \"./Actor\";\r\n\r\nexport default class Town extends Actor {\r\n  constructor(entity) {\r\n    super({\r\n      entity,\r\n      type: \"town\"\r\n    });\r\n  }\r\n}\r\n","import Actor from \"./Actor\";\n\nexport default class Road extends Actor {\n  constructor(entity) {\n    super({\n      entity,\n      type: \"road\"\n    });\n  }\n}\n","import Actor from \"./Actor\";\r\n\r\nexport default class Culture extends Actor {\r\n  constructor(entity) {\r\n    super({\r\n      entity,\r\n      type: \"culture\"\r\n    });\r\n  }\r\n}\r\n","export default class Chronicle {\r\n  constructor() {\r\n    this._events = {};\r\n    this._actors = {};\r\n  }\r\n\r\n  get events() {\r\n    return { ...this._events };\r\n  }\r\n\r\n  get years() {\r\n    return Object.keys(this._events);\r\n  }\r\n\r\n  getActor(type, id) {\r\n    return this._actors[type] == null ? null : this._actors[type][id];\r\n  }\r\n\r\n  registerActors(...actors) {\r\n    return actors.map((actor) => {\r\n      let type = this._actors[actor.type];\r\n      if (type == null) type = this._actors[actor.type] = {};\r\n      if (type[actor.id] == null) type[actor.id] = actor;\r\n      return type[actor.id];\r\n    });\r\n  }\r\n\r\n  getYear(year) {\r\n    const events = this._events[year];\r\n\r\n    return events == null\r\n      ? []\r\n      : events.map((event) => {\r\n          const description = event.actors.reduce(\r\n            (description, actor, index) => {\r\n              return description.replaceAll(`{${index}}`, actor.label);\r\n            },\r\n            event.description\r\n          );\r\n\r\n          return {\r\n            event,\r\n            description\r\n          };\r\n        });\r\n  }\r\n\r\n  add(year, description, actorsProp = []) {\r\n    let events = this._events[year];\r\n\r\n    if (events == null) events = this._events[year] = [];\r\n\r\n    const actors = this.registerActors(...actorsProp);\r\n\r\n    const event = {\r\n      year,\r\n      actors,\r\n      description\r\n    };\r\n\r\n    events.push(event);\r\n    actors.forEach((actor) => actor.add(event));\r\n  }\r\n}\r\n","import Actor from \"./Actor\";\r\n\r\nexport default class Adventurer extends Actor {\r\n  constructor(entity) {\r\n    super({\r\n      entity,\r\n      type: \"adventurer\"\r\n    });\r\n  }\r\n\r\n  get label() {\r\n    return this._entity.fullName;\r\n  }\r\n}\r\n","import { Name } from \"name-df-generator\";\r\n\r\nimport MapEntity from \"./MapEntity\";\r\nimport governorStory from \"./stories/town/governor\";\r\nimport deathStory from \"./stories/town/death\";\r\nimport inhabitStory from \"./stories/town/inhabit\";\r\nimport childrenStory from \"./stories/town/children\";\r\nimport marriagesStory from \"./stories/town/marriages\";\r\n\r\nexport default class Town extends MapEntity {\r\n  constructor(props = {}) {\r\n    super({\r\n      icon: \"◙\",\r\n      color: \"orange\",\r\n      backgroundColor: \"#222\",\r\n      world: props.culture.world,\r\n      ...props\r\n    });\r\n\r\n    const { culture } = props;\r\n\r\n    this._culture = culture;\r\n    this._id = this.random.guid();\r\n\r\n    this._adventurers = [];\r\n    this._creation = this.world.year;\r\n    this._name = new Name({ seed: this._id });\r\n\r\n    this._settings = {\r\n      youths: 15\r\n    };\r\n\r\n    this._titles = {\r\n      governor: null\r\n    };\r\n\r\n    this._cache = {\r\n      alive: []\r\n    };\r\n  }\r\n\r\n  get id() {\r\n    return this._id;\r\n  }\r\n\r\n  get culture() {\r\n    return this._culture;\r\n  }\r\n\r\n  get world() {\r\n    return this._culture.world;\r\n  }\r\n\r\n  get random() {\r\n    return this.world.random;\r\n  }\r\n\r\n  get name() {\r\n    return this._name.toString();\r\n  }\r\n\r\n  get creation() {\r\n    return this._creation;\r\n  }\r\n\r\n  get adventurers() {\r\n    return [...this._cache.alive];\r\n  }\r\n\r\n  get titles() {\r\n    return { ...this._titles };\r\n  }\r\n\r\n  get governor() {\r\n    return this._titles.governor;\r\n  }\r\n\r\n  set governor(adventurer) {\r\n    this._titles.governor = adventurer;\r\n  }\r\n\r\n  killAdventurers(...adventurers) {\r\n    adventurers.forEach((adventurer) => {\r\n      const position = this._cache.alive.indexOf(adventurer);\r\n      if (position === -1) return;\r\n      this._cache.alive.splice(position, 1);\r\n    });\r\n  }\r\n\r\n  addAdventurers(...adventurers) {\r\n    this._adventurers.push(...adventurers);\r\n\r\n    this._cache.alive.push(\r\n      ...adventurers.filter((adventurer) => adventurer.isAlive(this.world.year))\r\n    );\r\n  }\r\n\r\n  createAdventurers(...adventurersInfo) {\r\n    const newAdventurers = adventurersInfo.map((adventurerInfo = {}) => {\r\n      return this._culture.createAdventurer({\r\n        ...adventurerInfo\r\n      });\r\n    });\r\n\r\n    this.addAdventurers(...newAdventurers);\r\n\r\n    return newAdventurers;\r\n  }\r\n\r\n  tick() {\r\n    inhabitStory(this);\r\n    childrenStory(this);\r\n    marriagesStory(this);\r\n    deathStory(this);\r\n    governorStory(this);\r\n  }\r\n}\r\n","import {\r\n  Town as TownActor,\r\n  Adventurer as AdventurerActor\r\n} from \"../../chronicles\";\r\n\r\nexport default function inhabit(town) {\r\n  if (town.creation + 3 <= town.world.year) return;\r\n\r\n  const newAdventurers = town.createAdventurers(\r\n    ...Array(town.random.integer({ min: 9, max: 11 }))\r\n      .fill()\r\n      .map(() => {\r\n        return {\r\n          birth: town._world.year - town.random.integer({ min: 18, max: 26 })\r\n        };\r\n      })\r\n  );\r\n\r\n  newAdventurers.forEach((adventurer) => {\r\n    town.world.addEvent(\"{0} settled in {1}\", [\r\n      new AdventurerActor(adventurer),\r\n      new TownActor(town)\r\n    ]);\r\n  });\r\n}\r\n","import {\r\n  Town as TownActor,\r\n  Adventurer as AdventurerActor\r\n} from \"../../chronicles\";\r\n\r\nimport { genders } from \"culture-generator\";\r\n\r\nexport default function children(town) {\r\n  const { wifes, youths } = town.adventurers.reduce(\r\n    (info, adventurer) => {\r\n      if (adventurer.getAge(town.world.year) < 35) {\r\n        info.youths += 1;\r\n      }\r\n\r\n      if (adventurer.spouse == null) return info;\r\n      if (adventurer.gender !== genders.FEMALE) return info;\r\n\r\n      const lastBirth = Math.min(\r\n        ...adventurer.children.map((child) => child.getAge(town.world.year))\r\n      );\r\n\r\n      if (lastBirth > 2) info.wifes.push(adventurer);\r\n\r\n      return info;\r\n    },\r\n    {\r\n      wifes: [],\r\n      youths: 0\r\n    }\r\n  );\r\n\r\n  wifes.sort((wifeOne, wifeTwo) => {\r\n    return wifeOne.children.length - wifeTwo.children.length;\r\n  });\r\n\r\n  const amount = town.random.integer({\r\n    min: 0,\r\n    max: Math.max(0, Math.min(wifes.length, town._settings.youths - youths))\r\n  });\r\n\r\n  wifes.slice(0, amount).forEach((wife) => {\r\n    const husband = wife.spouse;\r\n    const child = wife.reproduce(husband, { birth: town.world.year });\r\n\r\n    town.addAdventurers(child);\r\n\r\n    town.world.addEvent(\"{0} and {1} had a child who they named {2} in {3}\", [\r\n      new AdventurerActor(husband),\r\n      new AdventurerActor(wife),\r\n      new AdventurerActor(child),\r\n      new TownActor(town)\r\n    ]);\r\n  });\r\n}\r\n","import {\r\n  Town as TownActor,\r\n  Adventurer as AdventurerActor\r\n} from \"../../chronicles\";\r\n\r\nimport { genders } from \"culture-generator\";\r\n\r\nexport default function marriages(town) {\r\n  const adventurers = town.adventurers;\r\n\r\n  const { males, females } = adventurers.reduce(\r\n    (info, adventurer) => {\r\n      if (\r\n        adventurer.spouse != null &&\r\n        adventurer.spouse.isAlive(town.world.year) === true\r\n      )\r\n        return info;\r\n      if (adventurer.getAge(town.world.year) < 18) return info;\r\n\r\n      info[adventurer.gender === genders.MALE ? \"males\" : \"females\"].push(\r\n        adventurer\r\n      );\r\n\r\n      return info;\r\n    },\r\n    {\r\n      males: [],\r\n      females: []\r\n    }\r\n  );\r\n\r\n  const spouses = males.length > females.length ? males : females;\r\n  const possibleSpouses = spouses === females ? males : females;\r\n\r\n  const amount = town.random.integer({\r\n    min: 0,\r\n    max: Math.ceil(spouses.length / 2)\r\n  });\r\n\r\n  town.random\r\n    .shuffle(spouses)\r\n    .slice(0, amount)\r\n    .forEach((spouse) => {\r\n      let otherSpouse = town.random\r\n        .shuffle(possibleSpouses)\r\n        .find((possibleSpouse) => {\r\n          return (\r\n            spouse.extendedFamily.includes(possibleSpouse) === false &&\r\n            possibleSpouse.extendedFamily.includes(spouse) === false\r\n          );\r\n        });\r\n\r\n      if (otherSpouse == null) {\r\n        [otherSpouse] = town.createAdventurers({\r\n          gender:\r\n            spouse.gender !== genders.MALE ? genders.MALE : genders.FEMALE,\r\n          birth:\r\n            town.world.year -\r\n            town.random.integer({\r\n              min: 18,\r\n              max: 26\r\n            })\r\n        });\r\n      }\r\n\r\n      const otherSpousePosition = possibleSpouses.indexOf(otherSpouse);\r\n\r\n      if (otherSpousePosition !== -1) {\r\n        possibleSpouses.splice(otherSpousePosition, 1);\r\n      }\r\n\r\n      spouse.spouse = otherSpouse;\r\n\r\n      town.world.addEvent(\"{0} married {1} in {2}\", [\r\n        new AdventurerActor(spouse),\r\n        new AdventurerActor(otherSpouse),\r\n        new TownActor(town)\r\n      ]);\r\n    });\r\n}\r\n","import {\r\n  Town as TownActor,\r\n  Adventurer as AdventurerActor\r\n} from \"../../chronicles\";\r\n\r\nexport default function death(town) {\r\n  const deaths = town.adventurers.filter((adventurer) => {\r\n    return adventurer.isAlive(town.world.year) === false;\r\n  });\r\n\r\n  town.killAdventurers(...deaths);\r\n\r\n  deaths.forEach((adventurer) => {\r\n    if (town.titles.governor === adventurer) {\r\n      town.world.addEvent(\"Governor {0} of {1} died\", [\r\n        new AdventurerActor(adventurer),\r\n        new TownActor(town)\r\n      ]);\r\n    } else {\r\n      town.world.addEvent(\"{0} died in {1}\", [\r\n        new AdventurerActor(adventurer),\r\n        new TownActor(town)\r\n      ]);\r\n    }\r\n  });\r\n}\r\n","import {\r\n  Town as TownActor,\r\n  Adventurer as AdventurerActor\r\n} from \"../../chronicles\";\r\n\r\nexport default function governor(town) {\r\n  const adventurers = town.adventurers;\r\n\r\n  if (town.governor == null) {\r\n    town.governor = town.random.pickone(\r\n      adventurers.filter(\r\n        (adventurer) => adventurer.getAge(town.world.year) > 18\r\n      )\r\n    );\r\n\r\n    town.world.addEvent(\"{0} was given the position of Governor of {1}\", [\r\n      new AdventurerActor(town.governor),\r\n      new TownActor(town)\r\n    ]);\r\n  }\r\n\r\n  if (town.governor.isAlive(town.world.year) === true) return;\r\n\r\n  let heir = town.governor.children\r\n    .filter((adventurer) => {\r\n      return adventurer.isAlive(town.world.year);\r\n    })\r\n    .sort((childOne, childTwo) => {\r\n      return childTwo.getAge(town.year) - childOne.getAge(town.year);\r\n    })[0];\r\n\r\n  if (heir == null) {\r\n    heir = town.governor.extendedFamily\r\n      .filter((adventurer) => {\r\n        return adventurer.isAlive(town.world.year);\r\n      })\r\n      .sort((childOne, childTwo) => {\r\n        return childTwo.getAge(town.year) - childOne.getAge(town.year);\r\n      })[0];\r\n  }\r\n\r\n  if (adventurers.length === 0) return;\r\n\r\n  if (heir == null) {\r\n    heir = town.random.pickone(adventurers);\r\n  }\r\n\r\n  town.governor = heir;\r\n  town.world.addEvent(\"{0} was given the position of Governor of {1}\", [\r\n    new AdventurerActor(town.governor),\r\n    new TownActor(town)\r\n  ]);\r\n}\r\n","import { Culture as CultureGeneratorCulture } from \"culture-generator\";\r\n\r\nimport Town from \"./Town\";\r\nimport kingStory from \"./stories/culture/king\";\r\nimport townCreationStory from \"./stories/culture/town-creation\";\r\nimport newSettlementStory from \"./stories/culture/new-settlement\";\r\n\r\nexport default class Culture extends CultureGeneratorCulture {\r\n  constructor(props) {\r\n    super({\r\n      seed: props.world.random.guid(),\r\n      ...props\r\n    });\r\n\r\n    const { world } = props;\r\n\r\n    this._towns = [];\r\n    this._world = world;\r\n\r\n    this._titles = {\r\n      king: null\r\n    };\r\n  }\r\n\r\n  get world() {\r\n    return this._world;\r\n  }\r\n\r\n  get random() {\r\n    return this.world.random;\r\n  }\r\n\r\n  get towns() {\r\n    return this._towns;\r\n  }\r\n\r\n  get adventurers() {\r\n    return this._towns.reduce((adventurers, town) => {\r\n      adventurers.push(...town.adventurers);\r\n      return adventurers;\r\n    }, []);\r\n  }\r\n\r\n  get titles() {\r\n    return { ...this._titles };\r\n  }\r\n\r\n  get king() {\r\n    return this._titles.king;\r\n  }\r\n\r\n  set king(adventurer) {\r\n    this._titles.king = adventurer;\r\n  }\r\n\r\n  createTowns(...townsInfo) {\r\n    const newTowns = townsInfo.map((townInfo = {}) => {\r\n      const { x, y } =\r\n        townInfo.x != null || townInfo.y != null\r\n          ? {\r\n              x: townInfo.x,\r\n              y: townInfo.y\r\n            }\r\n          : this.world.getHabitableCoords();\r\n\r\n      const newTown = new Town({\r\n        x,\r\n        y,\r\n        ...townInfo,\r\n        culture: this\r\n      });\r\n\r\n      return newTown;\r\n    });\r\n\r\n    this._towns.push(...newTowns);\r\n\r\n    return newTowns;\r\n  }\r\n\r\n  tick() {\r\n    kingStory(this);\r\n    townCreationStory(this);\r\n    newSettlementStory(this);\r\n    this._towns.forEach((town) => {\r\n      town.tick();\r\n    });\r\n  }\r\n}\r\n","import {\r\n  Culture as CultureActor,\r\n  Adventurer as AdventurerActor\r\n} from \"../../chronicles\";\r\n\r\nexport default function king(culture) {\r\n  const adventurers = culture.adventurers;\r\n\r\n  if (adventurers.length === 0) return;\r\n\r\n  if (culture.king == null) {\r\n    culture.king = culture.random.pickone(\r\n      adventurers.filter(\r\n        (adventurer) => adventurer.getAge(culture.world.year) > 18\r\n      )\r\n    );\r\n\r\n    culture.world.addEvent(\"King {0} ascended the thrown of {1}\", [\r\n      new AdventurerActor(culture.king),\r\n      new CultureActor(culture)\r\n    ]);\r\n  }\r\n\r\n  if (culture.king.isAlive(culture.world.year) === true) return;\r\n\r\n  let heir = culture.king.children\r\n    .filter((adventurer) => {\r\n      return adventurer.isAlive(culture.world.year);\r\n    })\r\n    .sort((childOne, childTwo) => {\r\n      return childTwo.getAge(culture.year) - childOne.getAge(culture.year);\r\n    })[0];\r\n\r\n  if (heir == null) {\r\n    heir = culture.king.extendedFamily\r\n      .filter((adventurer) => {\r\n        return adventurer.isAlive(culture.world.year);\r\n      })\r\n      .sort((childOne, childTwo) => {\r\n        return childTwo.getAge(culture.year) - childOne.getAge(culture.year);\r\n      })[0];\r\n  }\r\n\r\n  if (adventurers.length === 0) return;\r\n\r\n  if (heir == null) {\r\n    heir = culture.random.pickone(adventurers);\r\n  }\r\n\r\n  culture.king = heir;\r\n  culture.world.addEvent(\"King {0} ascended the thrown of {1}\", [\r\n    new AdventurerActor(culture.king),\r\n    new CultureActor(culture)\r\n  ]);\r\n}\r\n","import { Town as TownActor, Culture as CultureActor } from \"../../chronicles\";\r\n\r\nexport default function cultureTownCreation(culture) {\r\n  if (culture.towns.length > 0) return;\r\n\r\n  const [newTown] = culture.createTowns({\r\n    culture\r\n  });\r\n\r\n  culture.world.addEvent(\"The people of {0} founded {1}\", [\r\n    new CultureActor(culture),\r\n    new TownActor(newTown)\r\n  ]);\r\n}\r\n","import {\r\n  Town as TownActor,\r\n  Road as RoadActor,\r\n  Culture as CultureActor\r\n} from \"../../chronicles\";\r\n\r\nexport default function newSettlement(culture) {\r\n  if (culture.random.bool({ likelihood: 80 }) === true) return;\r\n\r\n  lookup: for (let attempt = 0; attempt < 4; attempt++) {\r\n    const [town] = culture.towns;\r\n\r\n    const size = 4;\r\n    const space = Math.floor(size / 2);\r\n\r\n    const { x, y } = culture.world.getHabitableCoords({\r\n      fromX: Math.max(0, town.x - size),\r\n      fromY: Math.max(0, town.y - size),\r\n      toX: Math.min(culture.world.width, town.x + size),\r\n      toY: Math.min(culture.world.height, town.y + size)\r\n    });\r\n\r\n    const fromX = Math.max(0, x - space);\r\n    const fromY = Math.max(0, y - space);\r\n    const toX = Math.min(culture.world.width, x + space);\r\n    const toY = Math.min(culture.world.height, y + space);\r\n\r\n    for (let y = fromY; y < toY; y++) {\r\n      for (let x = fromX; x < toX; x++) {\r\n        if (culture.world.getMapEntityAt(x, y) != null) continue lookup;\r\n      }\r\n    }\r\n\r\n    const [newTown] = culture.createTowns({\r\n      x,\r\n      y,\r\n      culture\r\n    });\r\n\r\n    culture.world.addEvent(\r\n      \"{0} , a {1} settlment, has been founded by people from {2}\",\r\n      [new TownActor(newTown), new CultureActor(culture), new TownActor(town)]\r\n    );\r\n\r\n    const newRoad = culture.world.createRoad(town, newTown);\r\n\r\n    culture.world.addEvent(\"{0} is now connecting {1} and {0}\", [\r\n      new RoadActor(newRoad),\r\n      new TownActor(town),\r\n      new TownActor(newTown)\r\n    ]);\r\n\r\n    break;\r\n  }\r\n}\r\n","import { Name } from \"name-df-generator\";\n\nexport default class Road {\n  constructor(props) {\n    const { world, coordinates } = props;\n\n    this._world = world;\n    this._id = this.random.guid();\n    this._coordinates = coordinates;\n    this._name = new Name({ seed: this._id });\n\n    this._type = this.random.pickone([\n      \"Road\",\n      \"Street\",\n      \"Way\",\n      \"Avenue\",\n      \"Lane\",\n      \"Grove\"\n    ]);\n  }\n\n  get world() {\n    return this._world;\n  }\n\n  get random() {\n    return this._world.random;\n  }\n\n  get id() {\n    return this._id;\n  }\n\n  get name() {\n    return `${this._name} ${this._type}`;\n  }\n\n  get coordinates() {\n    return [...this._coordinates];\n  }\n}\n","import newMap from \"binos\";\r\nimport Chance from \"chance\";\r\nimport { Name } from \"name-df-generator\";\r\n\r\nimport Culture from \"./Culture\";\r\nimport tileTypes from \"./tileTypes\";\r\nimport { Chronicle } from \"./chronicles\";\r\nimport paintLine from \"./utils/paintLine\";\r\nimport getTileFactory from \"./factories/getTileFactory\";\r\n\r\nimport cultureCreationStory from \"./stories/world/culture-creation\";\r\nimport Road from \"./Road\";\r\n\r\nexport default class World {\r\n  constructor(props = {}) {\r\n    const { seed, canvas, offset = 15, onTownSelection } = props;\r\n\r\n    this._random = new Chance(seed);\r\n    this._id = this._random.guid();\r\n\r\n    this._roads = [];\r\n    this._year = 1000;\r\n    this._cultures = [];\r\n    this._chronicles = new Chronicle();\r\n    this._name = new Name({ seed: this._id });\r\n\r\n    this._offset = offset;\r\n    this._canvas = canvas;\r\n    this._random = new Chance(seed);\r\n    this._onTownSelection = onTownSelection;\r\n    this._context = setupContext(canvas, (x, y) => this.handleClick(x, y));\r\n\r\n    this.getTile = getTileFactory({\r\n      seed,\r\n      width: this.width,\r\n      height: this.height,\r\n      random: this._random\r\n    });\r\n\r\n    this._cache = {\r\n      mapEntities: {}\r\n    };\r\n  }\r\n\r\n  get id() {\r\n    return this._id;\r\n  }\r\n\r\n  get name() {\r\n    return this._name.toString();\r\n  }\r\n\r\n  get random() {\r\n    return this._random;\r\n  }\r\n\r\n  get cultures() {\r\n    return [...this._cultures];\r\n  }\r\n\r\n  get roads() {\r\n    return [...this._roads];\r\n  }\r\n\r\n  get width() {\r\n    return Math.floor(this._canvas.width / this._offset);\r\n  }\r\n\r\n  get height() {\r\n    return Math.floor(this._canvas.height / this._offset);\r\n  }\r\n\r\n  get year() {\r\n    return this._year;\r\n  }\r\n\r\n  get chronicles() {\r\n    return this._chronicles;\r\n  }\r\n\r\n  getMapEntityAt(x, y) {\r\n    return this._cache.mapEntities[`${x}:${y}`];\r\n  }\r\n\r\n  registerMapEntity(entity) {\r\n    if (this.getMapEntityAt(entity.x, entity.y) != null) {\r\n      throw new Error(\"coordinates already occupied\");\r\n    }\r\n\r\n    this._cache.mapEntities[`${entity.x}:${entity.y}`] = entity;\r\n  }\r\n\r\n  getHabitableCoords(info = {}) {\r\n    const fromX = info.fromX == null ? 0 : Math.max(0, info.fromX);\r\n    const fromY = info.fromY == null ? 0 : Math.max(0, info.fromY);\r\n    const toX =\r\n      info.toX == null ? this.width - 1 : Math.min(this.width - 1, info.toX);\r\n    const toY =\r\n      info.toY == null ? this.height - 1 : Math.min(this.height - 1, info.toY);\r\n\r\n    let attempts = 0;\r\n\r\n    while (attempts < 10) {\r\n      const x = this._random.integer({\r\n        min: fromX,\r\n        max: toX\r\n      });\r\n\r\n      const y = this._random.integer({\r\n        min: fromY,\r\n        max: toY\r\n      });\r\n\r\n      if (this.getMapEntityAt(x, y) != null) continue;\r\n\r\n      const tile = this.getTile(x, y);\r\n\r\n      if (\r\n        [\r\n          tileTypes.WATER,\r\n          tileTypes.OCEAN,\r\n          tileTypes.OCEAN_ICE,\r\n          tileTypes.WATER_ICE,\r\n          tileTypes.MOUNTAIN_ICE\r\n        ].includes(tile.type) === true\r\n      )\r\n        continue;\r\n\r\n      return { x, y };\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  handleClick(xProp, yProp) {\r\n    const x = Math.floor(xProp / this._offset);\r\n    const y = Math.floor(yProp / this._offset);\r\n\r\n    const chosenMapEntity = Object.values(this._cache.mapEntities).reduce(\r\n      (chosenMapEntity, mapEntity) => {\r\n        const distance = mapEntity.getDistance(x, y);\r\n\r\n        if (distance > 1) return chosenMapEntity;\r\n\r\n        if (chosenMapEntity == null) return mapEntity;\r\n\r\n        return chosenMapEntity.getDistance(x, y) > mapEntity.getDistance(x, y)\r\n          ? mapEntity\r\n          : chosenMapEntity;\r\n      },\r\n      null\r\n    );\r\n\r\n    if (chosenMapEntity == null) return;\r\n\r\n    this._onTownSelection(\r\n      this._chronicles.getActor(\"town\", chosenMapEntity.id)\r\n    );\r\n  }\r\n\r\n  addEvent(description, entities = []) {\r\n    this._chronicles.add(this._year, description, entities);\r\n  }\r\n\r\n  createRoad(source, destination) {\r\n    const xTo = Math.max(source.x, destination.x);\r\n    const xFrom = Math.min(source.x, destination.x);\r\n    const yTo = Math.max(source.y, destination.y);\r\n    const yFrom = Math.min(source.y, destination.y);\r\n\r\n    const surroundingTiles = [];\r\n\r\n    for (let y = yFrom; y <= yTo; y++) {\r\n      for (let x = xFrom; x <= xTo; x++) {\r\n        const currentTile = this.getTile(x, y);\r\n\r\n        surroundingTiles.push({\r\n          x,\r\n          y,\r\n          weight:\r\n            currentTile.type === tileTypes.MOUNTAIN_ICE\r\n              ? 0.9\r\n              : currentTile.type === tileTypes.MOUNTAIN\r\n              ? 0.9\r\n              : currentTile.type === tileTypes.HILL_ICE\r\n              ? 0.7 + this._random.floating({ min: 0, max: 0.4 })\r\n              : currentTile.type === tileTypes.HILL\r\n              ? 0.5 + this._random.floating({ min: 0, max: 0.6 })\r\n              : currentTile.type === tileTypes.HILL_SWAMP\r\n              ? 0.7 + this._random.floating({ min: 0, max: 0.4 })\r\n              : currentTile.type === tileTypes.HILL_GRASS\r\n              ? 0.6 + this._random.floating({ min: 0, max: 0.5 })\r\n              : currentTile.type === tileTypes.HILL_SOIL\r\n              ? 0.6 + this._random.floating({ min: 0, max: 0.5 })\r\n              : currentTile.type === tileTypes.HILL_SAND\r\n              ? 0.8 + this._random.floating({ min: 0, max: 0.3 })\r\n              : currentTile.type === tileTypes.PLAIN_ICE\r\n              ? 0.4 + this._random.floating({ min: 0, max: 0.7 })\r\n              : currentTile.type === tileTypes.PLAIN_SWAMP\r\n              ? 0.6 + this._random.floating({ min: 0, max: 0.5 })\r\n              : currentTile.type === tileTypes.PLAIN_FOREST\r\n              ? 0.5 + this._random.floating({ min: 0, max: 0.6 })\r\n              : currentTile.type === tileTypes.PLAIN_GRASS\r\n              ? 0.4 + this._random.floating({ min: 0, max: 0.7 })\r\n              : currentTile.type === tileTypes.PLAIN_SOIL\r\n              ? 0.4 + this._random.floating({ min: 0, max: 0.7 })\r\n              : currentTile.type === tileTypes.PLAIN_SAND\r\n              ? 0.6 + this._random.floating({ min: 0, max: 0.5 })\r\n              : currentTile.type === tileTypes.PLAIN_MARSH\r\n              ? 0.6 + this._random.floating({ min: 0, max: 0.5 })\r\n              : currentTile.type === tileTypes.PLAIN\r\n              ? 0.4 + this._random.floating({ min: 0, max: 0.6 })\r\n              : currentTile.type === tileTypes.WATER\r\n              ? 1\r\n              : currentTile.type === tileTypes.WATER_ICE\r\n              ? 0.9 + this._random.floating({ min: 0, max: 0.2 })\r\n              : currentTile.type === tileTypes.OCEAN\r\n              ? 1\r\n              : currentTile.type === tileTypes.OCEAN_ICE\r\n              ? 0.9 + this._random.floating({ min: 0, max: 0.2 })\r\n              : 1\r\n        });\r\n      }\r\n    }\r\n\r\n    const coordinates = newMap(surroundingTiles)(source, destination, {\r\n      diagonals: false,\r\n      calculateG: (nodeOne, nodeTwo) => {\r\n        const distance = Math.sqrt(\r\n          Math.pow(nodeOne.x - nodeTwo.x, 2) +\r\n            Math.pow(nodeOne.y - nodeTwo.y, 2)\r\n        );\r\n\r\n        const tileOne = this.getTile(nodeOne.x, nodeOne.y);\r\n        const tileTwo = this.getTile(nodeTwo.x, nodeTwo.y);\r\n\r\n        const elevation = Math.abs(tileOne.elevation - tileTwo.elevation);\r\n\r\n        return distance + elevation;\r\n      }\r\n    }).reverse();\r\n\r\n    coordinates.pop();\r\n    coordinates.splice(0, 1);\r\n\r\n    const newRoad = new Road({\r\n      coordinates,\r\n      world: this\r\n    });\r\n\r\n    this._roads.push(newRoad);\r\n\r\n    return newRoad;\r\n  }\r\n\r\n  createCultures(...culturesInfo) {\r\n    const newCulture = culturesInfo.map((cultureInfo = {}) => {\r\n      const newCulture = new Culture({\r\n        ...cultureInfo,\r\n        world: this\r\n      });\r\n\r\n      return newCulture;\r\n    });\r\n\r\n    this._cultures.push(...newCulture);\r\n\r\n    return newCulture;\r\n  }\r\n\r\n  draw() {\r\n    for (let y = 0; y < this.height; y++) {\r\n      for (let x = 0; x < this.width; x++) {\r\n        const tile = this.getTile(x, y);\r\n\r\n        const positionX = x * this._offset;\r\n        const positionY = y * this._offset;\r\n\r\n        const mapEntity = this.getMapEntityAt(x, y);\r\n\r\n        const ui = mapEntity == null ? tile.ui : mapEntity.ui;\r\n\r\n        this._context.fillStyle = ui.backgroundColor;\r\n\r\n        this._context.fillRect(positionX - 8, positionY - 9, 20, 20);\r\n\r\n        this._context.fillStyle = ui.color;\r\n        this._context.fillText(ui.icon, positionX, positionY);\r\n      }\r\n    }\r\n\r\n    paintLine({\r\n      color: \"#978169\",\r\n      offset: this._offset,\r\n      context: this._context,\r\n      coordinates: this._roads.map((road) => road.coordinates)\r\n    });\r\n  }\r\n\r\n  tick() {\r\n    this._year += 1;\r\n\r\n    cultureCreationStory(this);\r\n\r\n    this._cultures.forEach((culture) => {\r\n      culture.tick();\r\n    });\r\n  }\r\n}\r\n\r\nfunction setupContext(canvas, onClick) {\r\n  const context = canvas.getContext(\"2d\");\r\n\r\n  context.textAlign = \"center\";\r\n  context.font = \"10px monospace\";\r\n  context.lineCap = \"round\";\r\n  context.lineJoin = \"round\";\r\n\r\n  function getCursorPosition(ev) {\r\n    const rect = canvas.getBoundingClientRect();\r\n    const x = ev.clientX - rect.left;\r\n    const y = ev.clientY - rect.top;\r\n    onClick(x, y);\r\n  }\r\n\r\n  canvas.addEventListener(\"click\", function (e) {\r\n    getCursorPosition(e);\r\n  });\r\n\r\n  return context;\r\n}\r\n","export default function paintLine(props) {\n  const { offset, context, coordinates, color } = props;\n\n  [\n    ({\n      width: 10,\n      color: \"#222\"\n    },\n    {\n      width: 2,\n      color: color\n    })\n  ].forEach((info) => {\n    context.strokeStyle = info.color;\n    context.lineWidth = info.width;\n\n    coordinates.forEach((coordinate) => {\n      context.beginPath();\n\n      coordinate.forEach((coords) => {\n        context.lineTo(coords.x * offset, coords.y * offset - 2);\n      });\n\n      context.stroke();\n    });\n  });\n}\n","import { Culture as CultureActor } from \"../../chronicles\";\r\n\r\nexport default function worldCultureCreation(world) {\r\n  if (world.cultures.length > 4) return;\r\n\r\n  world\r\n    .createCultures(\r\n      ...Array(\r\n        world.random.integer({\r\n          min: 0,\r\n          max: 2\r\n        })\r\n      )\r\n        .fill()\r\n        .map(() => ({\r\n          seed: world.random.guid()\r\n        }))\r\n    )\r\n    .forEach((newCulture) => {\r\n      world.addEvent(\"The people of {0} started writing history\", [\r\n        new CultureActor(newCulture)\r\n      ]);\r\n    });\r\n}\r\n","import React from \"react\";\r\n\r\nexport default React.createContext();\r\n","import React from \"react\";\nimport AppContext from \"./AppContext\";\n\nimport \"./AppTime.css\";\n\nfunction AppTime() {\n  const { world } = React.useContext(AppContext);\n  const [year, setYear] = React.useState(world == null ? 0 : world.year);\n\n  const onClick = React.useCallback(() => {\n    if (world == null) return;\n    Array(50)\n      .fill()\n      .forEach(() => world.tick());\n    world.draw();\n    setYear(world.year);\n  }, [world]);\n\n  React.useEffect(() => {\n    onClick();\n  }, [onClick]);\n\n  return (\n    world != null && (\n      <div className=\"AppTime\">\n        <strong>{world.name}</strong>\n        <div>Year: {year}</div>\n        <button onClick={onClick} className=\"AppTimeTicker\">\n          Proceed\n        </button>\n      </div>\n    )\n  );\n}\n\nexport default React.memo(AppTime);\n","import React from \"react\";\r\n\r\nimport \"./Tabs.css\";\r\n\r\nfunction Tabs(props) {\r\n  const { tabs = [] } = props;\r\n\r\n  const [selectedTab, setSelectedTab] = React.useState(0);\r\n\r\n  const tabItems = React.useMemo(() => {\r\n    return tabs.map((tab, index) => {\r\n      const classes = [\"TabsNavigationItem\"];\r\n\r\n      if (index === selectedTab) classes.push(\"TabsNavigationItem--Active\");\r\n\r\n      return (\r\n        <li\r\n          tabIndex={0}\r\n          role=\"button\"\r\n          className={classes.join(\" \")}\r\n          onClick={() => setSelectedTab(index)}\r\n        >\r\n          {tab.label}\r\n        </li>\r\n      );\r\n    });\r\n  }, [tabs, selectedTab]);\r\n\r\n  const content = React.useMemo(() => {\r\n    return tabs[selectedTab].content;\r\n  }, [tabs, selectedTab]);\r\n\r\n  return (\r\n    <div className=\"Tabs\">\r\n      <nav>\r\n        <ul className=\"TabsNavigation\">{tabItems}</ul>\r\n      </nav>\r\n\r\n      <div className=\"TabsContent\">{content}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(Tabs);\r\n","import React from \"react\";\r\n\r\nimport AppContext from \"./AppContext\";\r\n\r\nimport \"./Actor.css\";\r\n\r\nfunction Actor(props) {\r\n  const { type, actorID } = props;\r\n\r\n  const { world, setSelectedActorInfo } = React.useContext(AppContext);\r\n\r\n  const actor = React.useMemo(() => {\r\n    return world.chronicles.getActor(type, actorID);\r\n  }, [type, world, actorID]);\r\n\r\n  const onClick = React.useCallback(() => {\r\n    setSelectedActorInfo({\r\n      type,\r\n      entity: actor\r\n    });\r\n  }, [type, actor, setSelectedActorInfo]);\r\n\r\n  return (\r\n    <span onClick={onClick} className=\"Actor\">\r\n      {actor.label}\r\n    </span>\r\n  );\r\n}\r\n\r\nexport default React.memo(Actor);\r\n","import React from \"react\";\r\n\r\nimport \"./Dialog.css\";\r\n\r\nfunction Dialog(props) {\r\n  const { width = \"500px\", onClose: onCloseProp } = props;\r\n\r\n  const onClose = React.useCallback(\r\n    (...args) => {\r\n      if (typeof onCloseProp !== \"function\") return;\r\n      onCloseProp(...args);\r\n    },\r\n    [onCloseProp]\r\n  );\r\n\r\n  return (\r\n    <div role=\"dialog\" className=\"Dialog\">\r\n      <div style={{ width }} className=\"DialogContainer\">\r\n        <div\r\n          tabIndex={0}\r\n          role=\"button\"\r\n          onClick={onClose}\r\n          aria-label=\"Close Dialog\"\r\n          className=\"DialogContainerClose\"\r\n        >\r\n          x\r\n        </div>\r\n\r\n        {props.children}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(Dialog);\r\n","import React from \"react\";\r\nimport { genders } from \"culture-generator\";\r\nimport Actor from \"./Actor\";\r\n\r\nfunction TownNoblesTabContent(props) {\r\n  const { town } = props;\r\n\r\n  const adventurers = React.useMemo(() => {\r\n    return town.entity.adventurers.map((adventurer) => {\r\n      return (\r\n        <li>\r\n          <Actor type=\"adventurer\" actorID={adventurer.id} />\r\n          {adventurer.getAge(town.entity.world.year) < 18 && \" ☺ \"}\r\n          {adventurer.gender === genders.MALE ? \" ♂ \" : \" ♀ \"}\r\n          {adventurer.getAge(town.entity.world.year)}\r\n        </li>\r\n      );\r\n    });\r\n  }, [town]);\r\n\r\n  return <ul>{adventurers}</ul>;\r\n}\r\n\r\nexport default React.memo(TownNoblesTabContent);\r\n","import React from \"react\";\nimport Actor from \"./Actor\";\n\nfunction TownTitlesTabContent(props) {\n  const { town: townProp } = props;\n\n  const town = React.useMemo(() => {\n    return townProp.entity;\n  }, [townProp]);\n\n  return React.useMemo(() => {\n    const titles = town.titles;\n    return Object.keys(titles).map((title) => {\n      return (\n        <div>\n          <h4 className=\"TabsContentTitle\">{title}</h4>\n          {titles[title] == null ? (\n            <center>N/A</center>\n          ) : (\n            <Actor type=\"adventurer\" actorID={titles[title].id} />\n          )}\n        </div>\n      );\n    });\n  }, [town]);\n}\n\nexport default React.memo(TownTitlesTabContent);\n","import React from \"react\";\r\nimport Actor from \"./Actor\";\r\nimport AppContext from \"./AppContext\";\r\n\r\nfunction ActorHistoryTabContent(props) {\r\n  const { actorID, type } = props;\r\n\r\n  const { world } = React.useContext(AppContext);\r\n\r\n  const actor = React.useMemo(() => {\r\n    return world.chronicles.getActor(type, actorID);\r\n  }, [type, actorID, world]);\r\n\r\n  const eventsDOM = React.useMemo(() => {\r\n    return actor.years\r\n      .reduce((eventsDOM, year) => {\r\n        const events = actor\r\n          .getYear(year)\r\n          .map(({ event }) => {\r\n            const description = event.actors.reduce(\r\n              (description, actor, index) => {\r\n                const placeholder = `{${index}}`;\r\n\r\n                description.forEach((token, index) => {\r\n                  if (token === placeholder) {\r\n                    description[index] = (\r\n                      <Actor type={actor.type} actorID={actor.id} />\r\n                    );\r\n                  }\r\n                });\r\n\r\n                return description;\r\n              },\r\n              event.description.split(\" \")\r\n            );\r\n\r\n            return (\r\n              <li key={`event${event.description}`}>\r\n                {description.map((token) => {\r\n                  return typeof token !== \"string\" ? token : ` ${token} `;\r\n                })}\r\n              </li>\r\n            );\r\n          })\r\n          .reverse();\r\n\r\n        eventsDOM.push(\r\n          <div key={`year-${year}`}>\r\n            <h4 className=\"TabsContentTitle\">Year: {year}</h4>\r\n            <ul>{events}</ul>\r\n          </div>\r\n        );\r\n\r\n        return eventsDOM;\r\n      }, [])\r\n      .reverse();\r\n  }, [actor]);\r\n\r\n  return <div>{eventsDOM}</div>;\r\n}\r\n\r\nexport default React.memo(ActorHistoryTabContent);\r\n","import React from \"react\";\r\n\r\nimport Tabs from \"./Tabs\";\r\nimport Actor from \"./Actor\";\r\nimport Dialog from \"./Dialog\";\r\nimport TownNoblesTabContent from \"./TownNoblesTabContent\";\r\nimport TownTitlesTabContent from \"./TownTitlesTabContent\";\r\nimport ActorHistoryTabContent from \"./ActorHistoryTabContent\";\r\n\r\nimport \"./TownDialog.css\";\r\n\r\nfunction TownDialog(props) {\r\n  const { town } = props;\r\n\r\n  const tabs = React.useMemo(() => {\r\n    return [\r\n      {\r\n        label: \"History\",\r\n        content: <ActorHistoryTabContent type=\"town\" actorID={town.id} />\r\n      },\r\n      {\r\n        label: \"Nobles\",\r\n        content: <TownNoblesTabContent town={town} />\r\n      },\r\n      {\r\n        label: \"Titles\",\r\n        content: <TownTitlesTabContent town={town} />\r\n      }\r\n    ];\r\n  }, [town]);\r\n\r\n  return (\r\n    <Dialog {...props}>\r\n      <header className=\"DialogHeader\">\r\n        <img\r\n          width=\"50\"\r\n          height=\"50\"\r\n          className=\"TownDialogHeraldry\"\r\n          alt={`${town.label} Heraldry`}\r\n          src={`http://armoria.herokuapp.com/png/50/${town.id}?shield=french`}\r\n        />\r\n\r\n        <div>\r\n          <h2 className=\"TownDialogHeaderTitle\">{town.label}</h2>\r\n\r\n          <h3 className=\"TownDialogHeaderSubtitle\">\r\n            <Actor type=\"culture\" actorID={town.entity.culture.id} />\r\n          </h3>\r\n        </div>\r\n      </header>\r\n\r\n      <div className=\"DialogContent\">\r\n        <Tabs tabs={tabs} />\r\n      </div>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default React.memo(TownDialog);\r\n","import React from \"react\";\nimport { ToWords } from \"to-words\";\n\nimport { genders } from \"culture-generator\";\n\nimport Actor from \"./Actor\";\nimport AppContext from \"./AppContext\";\n\nfunction AdventurerFamilyTabContent(props) {\n  const { adventurer: adventurerProp } = props;\n\n  const { world } = React.useContext(AppContext);\n\n  const toWords = React.useMemo(() => {\n    return new ToWords();\n  }, []);\n\n  const adventurer = React.useMemo(() => {\n    return adventurerProp.entity;\n  }, [adventurerProp]);\n\n  const dob = React.useMemo(() => {\n    const pronoun = adventurer.gender === genders.MALE ? \"He\" : \"She\";\n\n    const age = toWords.convert(adventurer.getAge(world.year)).toLowerCase();\n\n    return (\n      <p>\n        {pronoun} is {age} years old, born on in {world.year} and is from the{\" \"}\n        <Actor type=\"culture\" actorID={adventurer.culture.id} /> civilization.\n      </p>\n    );\n  }, [adventurer, toWords, world]);\n\n  const parentsDOM = React.useMemo(() => {\n    if (adventurer.parents.length === 0) return;\n\n    const pronoun = adventurer.gender === genders.MALE ? \"He is\" : \"She is\";\n\n    const son = adventurer.gender === genders.MALE ? \"son\" : \"daughter\";\n\n    return (\n      <p>\n        {pronoun} the {son} of{\" \"}\n        <Actor type=\"adventurer\" actorID={adventurer.father.id} /> and{\" \"}\n        <Actor type=\"adventurer\" actorID={adventurer.mother.id} />.\n      </p>\n    );\n  }, [adventurer]);\n\n  const spouseDOM = React.useMemo(() => {\n    const pronoun = adventurer.gender === genders.MALE ? \"He is\" : \"She is\";\n\n    const spouseDOM = [];\n\n    if (adventurer.spouse != null) {\n      spouseDOM.push(\n        <span>\n          {pronoun} married to{\" \"}\n          <Actor type=\"adventurer\" actorID={adventurer.spouse.id} />\n        </span>\n      );\n    }\n\n    const children = adventurer.children.map((adventurer) => {\n      return <Actor type=\"adventurer\" actorID={adventurer.id} />;\n    });\n\n    if (children.length > 0) {\n      spouseDOM.push(\n        <span>\n          {\" \"}\n          and has {toWords\n            .convert(adventurer.children.length)\n            .toLowerCase()}{\" \"}\n          {children.length === 1 ? \"child\" : \"children\"}\n        </span>\n      );\n    }\n\n    return spouseDOM.length === 0 ? null : <p>{spouseDOM}.</p>;\n  }, [adventurer, toWords]);\n\n  return (\n    <>\n      {dob}\n      {parentsDOM}\n      {spouseDOM}\n      <p>{adventurer.appearance}.</p>\n      <p>{adventurer.bodyAttributes}.</p>\n      <p>{adventurer.soulAttributes}.</p>\n      <p>{adventurer.facets}.</p>\n    </>\n  );\n}\n\nexport default React.memo(AdventurerFamilyTabContent);\n","import React from \"react\";\nimport Actor from \"./Actor\";\n\nfunction AdventurerFamilyTabContent(props) {\n  const { adventurer } = props;\n\n  const familyDOM = React.useMemo(() => {\n    return [\n      {\n        name: \"Spouse\",\n        adventurers:\n          adventurer.entity.spouse == null ? [] : [adventurer.entity.spouse]\n      },\n      {\n        name: \"Children\",\n        adventurers: adventurer.entity.children\n      },\n      {\n        name: \"Parents\",\n        adventurers: adventurer.entity.parents\n      },\n      {\n        name: \"Siblings\",\n        adventurers: adventurer.entity.siblings\n      },\n      {\n        name: \"Grandparents\",\n        adventurers: adventurer.entity.grandparents\n      },\n      {\n        name: \"Uncle/Aunties\",\n        adventurers: adventurer.entity.piblings\n      },\n      {\n        name: \"Cousins\",\n        adventurers: adventurer.entity.cousins\n      }\n    ].reduce((familyDOM, info) => {\n      familyDOM.push(\n        <div key={`family-${info.name}`}>\n          <h3 className=\"TabsContentTitle\">{info.name}</h3>\n\n          {info.adventurers.length === 0 ? (\n            <center>N/A</center>\n          ) : (\n            <ul>\n              {info.adventurers.map((adventurer) => {\n                return (\n                  <li>\n                    <Actor type=\"adventurer\" actorID={adventurer.id} />\n                  </li>\n                );\n              })}\n            </ul>\n          )}\n        </div>\n      );\n\n      return familyDOM;\n    }, []);\n  }, [adventurer]);\n\n  return familyDOM;\n}\n\nexport default React.memo(AdventurerFamilyTabContent);\n","import React from \"react\";\r\n\r\nimport Tabs from \"./Tabs\";\r\nimport Dialog from \"./Dialog\";\r\nimport ActorHistoryTabContent from \"./ActorHistoryTabContent\";\r\nimport AdventurerInfoTabContent from \"./AdventurerInfoTabContent\";\r\nimport AdventurerFamilyTabContent from \"./AdventurerFamilyTabContent\";\r\n\r\nfunction AdventurerDialog(props) {\r\n  const { adventurer } = props;\r\n\r\n  const tabs = React.useMemo(() => {\r\n    return [\r\n      {\r\n        label: \"Info\",\r\n        content: <AdventurerInfoTabContent adventurer={adventurer} />\r\n      },\r\n      {\r\n        label: \"History\",\r\n        content: (\r\n          <ActorHistoryTabContent type=\"adventurer\" actorID={adventurer.id} />\r\n        )\r\n      },\r\n      {\r\n        label: \"Family\",\r\n        content: <AdventurerFamilyTabContent adventurer={adventurer} />\r\n      }\r\n    ];\r\n  }, [adventurer]);\r\n\r\n  return (\r\n    <Dialog {...props}>\r\n      <header className=\"DialogHeader\">\r\n        <div>\r\n          <h2 className=\"TownDialogHeaderTitle\">{adventurer.label}</h2>\r\n        </div>\r\n      </header>\r\n\r\n      <div className=\"DialogContent\">\r\n        <Tabs tabs={tabs} />\r\n      </div>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default React.memo(AdventurerDialog);\r\n","import React from \"react\";\n\nfunction CultureInfoTabContent(props) {\n  const { culture: cultureProp } = props;\n\n  const culture = React.useMemo(() => {\n    return cultureProp.entity;\n  }, [cultureProp]);\n\n  return (\n    <>\n      <div>\n        <h3 className=\"TabsContentTitle\">Ethics</h3>\n        <p>{culture.ethics.toString()}</p>\n      </div>\n      <div>\n        <h3 className=\"TabsContentTitle\">Beliefs</h3>\n        <p>{culture.beliefs.toString()}</p>\n      </div>\n    </>\n  );\n}\n\nexport default React.memo(CultureInfoTabContent);\n","import React from \"react\";\nimport Actor from \"./Actor\";\n\nfunction CultureTownsTabContent(props) {\n  const { culture: cultureProp } = props;\n\n  const culture = React.useMemo(() => {\n    return cultureProp.entity;\n  }, [cultureProp]);\n\n  return React.useMemo(() => {\n    const towns = culture.towns;\n\n    return towns.length === 0 ? (\n      <center>N/A</center>\n    ) : (\n      <ul>\n        {towns.map((town) => {\n          return (\n            <li>\n              <Actor type=\"town\" actorID={town.id} />\n            </li>\n          );\n        })}\n      </ul>\n    );\n  }, [culture]);\n}\n\nexport default React.memo(CultureTownsTabContent);\n","import React from \"react\";\nimport Actor from \"./Actor\";\n\nfunction CultureTitlesTabContent(props) {\n  const { culture: cultureProp } = props;\n\n  const culture = React.useMemo(() => {\n    return cultureProp.entity;\n  }, [cultureProp]);\n\n  return React.useMemo(() => {\n    const titles = culture.titles;\n\n    return Object.keys(titles).map((title) => {\n      return (\n        <div>\n          <h4 className=\"TabsContentTitle\">{title}</h4>\n          {titles[title] == null ? (\n            <center>N/A</center>\n          ) : (\n            <Actor type=\"adventurer\" actorID={titles[title].id} />\n          )}\n        </div>\n      );\n    });\n  }, [culture]);\n}\n\nexport default React.memo(CultureTitlesTabContent);\n","import React from \"react\";\nimport Actor from \"./Actor\";\n\nfunction CultureOpinionsTabContent(props) {\n  const { culture: cultureProp } = props;\n\n  const culture = React.useMemo(() => {\n    return cultureProp.entity;\n  }, [cultureProp]);\n\n  return React.useMemo(() => {\n    const cultures = culture.world.cultures;\n\n    return cultures.length === 1 ? (\n      \"N/A\"\n    ) : (\n      <ul>\n        {cultures.reduce((culturesDOM, otherCulture) => {\n          if (otherCulture === culture) return culturesDOM;\n\n          culturesDOM.push(\n            <li>\n              <Actor type=\"culture\" actorID={otherCulture.id} />:{\" \"}\n              {culture.getOpinion(otherCulture)}\n            </li>\n          );\n\n          return culturesDOM;\n        }, [])}\n      </ul>\n    );\n  }, [culture]);\n}\n\nexport default React.memo(CultureOpinionsTabContent);\n","import React from \"react\";\n\nimport Tabs from \"./Tabs\";\nimport Dialog from \"./Dialog\";\nimport CultureInfoTabContent from \"./CultureInfoTabContent\";\nimport ActorHistoryTabContent from \"./ActorHistoryTabContent\";\nimport CultureTownsTabContent from \"./CultureTownsTabContent\";\nimport CultureTitlesTabContent from \"./CultureTitlesTabContent\";\nimport CultureOpinionsTabContent from \"./CultureOpinionsTabContent\";\n\nfunction CultureDialog(props) {\n  const { culture } = props;\n\n  const tabs = React.useMemo(() => {\n    return [\n      {\n        label: \"History\",\n        content: <ActorHistoryTabContent type=\"culture\" actorID={culture.id} />\n      },\n      {\n        label: \"Info\",\n        content: <CultureInfoTabContent culture={culture} />\n      },\n      {\n        label: \"Titles\",\n        content: <CultureTitlesTabContent culture={culture} />\n      },\n      {\n        label: \"Towns\",\n        content: <CultureTownsTabContent culture={culture} />\n      },\n      {\n        label: \"Diplo\",\n        content: <CultureOpinionsTabContent culture={culture} />\n      }\n    ];\n  }, [culture]);\n\n  return (\n    <Dialog {...props}>\n      <header className=\"DialogHeader\">\n        <img\n          width=\"50\"\n          height=\"50\"\n          className=\"TownDialogHeraldry\"\n          alt={`${culture.label} Heraldry`}\n          src={`http://armoria.herokuapp.com/png/50/${culture.id}?shield=french`}\n        />\n\n        <div>\n          <h2 className=\"TownDialogHeaderTitle\">{culture.label}</h2>\n        </div>\n      </header>\n\n      <div className=\"DialogContent\">\n        <Tabs tabs={tabs} />\n      </div>\n    </Dialog>\n  );\n}\n\nexport default React.memo(CultureDialog);\n","import React from \"react\";\n\nimport { World } from \"./lib\";\nimport AppTime from \"./AppTime\";\nimport TownDialog from \"./TownDialog\";\n\nimport \"./styles.css\";\nimport AppContext from \"./AppContext\";\nimport AdventurerDialog from \"./AdventurerDialog\";\nimport CultureDialog from \"./CultureDialog\";\n\nexport default function App() {\n  const canvasRef = React.useRef();\n  const [world, setWorld] = React.useState();\n  const [selectedActorInfo, setSelectedActorInfo] = React.useState();\n\n  React.useLayoutEffect(() => {\n    const world = new World({\n      canvas: canvasRef.current,\n      seed: \"idrinkandiknowthingsd\",\n\n      onTownSelection: (entity) => {\n        setSelectedActorInfo({\n          entity,\n          type: \"town\"\n        });\n      }\n    });\n\n    window.world = world;\n\n    setWorld(world);\n  }, []);\n\n  const onDialogClose = React.useCallback(() => {\n    setSelectedActorInfo(null);\n  }, []);\n\n  const dialogDOM = React.useMemo(() => {\n    if (selectedActorInfo == null) return;\n\n    const { type, entity } = selectedActorInfo;\n\n    switch (type) {\n      case \"town\": {\n        return <TownDialog town={entity} onClose={onDialogClose} />;\n      }\n      case \"adventurer\": {\n        return <AdventurerDialog adventurer={entity} onClose={onDialogClose} />;\n      }\n      case \"culture\": {\n        return <CultureDialog culture={entity} onClose={onDialogClose} />;\n      }\n      default:\n        return null;\n    }\n  }, [selectedActorInfo, onDialogClose]);\n\n  return (\n    <div className=\"App\">\n      <AppContext.Provider\n        value={{\n          world,\n          setSelectedActorInfo\n        }}\n      >\n        <AppTime />\n        {dialogDOM}\n        <canvas ref={canvasRef} width=\"2000\" height=\"2000\"></canvas>\n      </AppContext.Provider>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}