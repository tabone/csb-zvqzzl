{"version":3,"sources":["lib/tileTypes.js","lib/MapEntity.js","lib/chronicles/Actor.js","lib/chronicles/Town.js","lib/chronicles/Road.js","lib/chronicles/Culture.js","lib/chronicles/Chronicle.js","lib/chronicles/Adventurer.js","lib/Town.js","lib/stories/town/inhabit.js","lib/stories/town/children.js","lib/stories/town/marriages.js","lib/stories/town/death.js","lib/stories/town/governor.js","lib/Culture.js","lib/stories/culture/king.js","lib/stories/culture/town-creation.js","lib/stories/culture/new-settlement.js","lib/Tile.js","lib/factories/getNoiseFactory.js","lib/factories/getTileFactory.js","lib/factories/getLinearNoiseFactory.js","lib/Road.js","lib/World.js","lib/utils/paintLine.js","lib/stories/world/culture-creation.js","AppContext.js","AppTime.js","Tabs.js","Actor.js","Dialog.js","TownNoblesTabContent.js","TownTitlesTabContent.js","ActorHistoryTabContent.js","TownDialog.js","AdventurerInfoTabContent.js","AdventurerFamilyTabContent.js","AdventurerDialog.js","CultureInfoTabContent.js","CultureTownsTabContent.js","CultureTitlesTabContent.js","CultureOpinionsTabContent.js","CultureDialog.js","App.js","index.js"],"names":["module","exports","MOUNTAIN_ICE","MOUNTAIN","HILL_ICE","HILL","HILL_SOIL","HILL_SWAMP","HILL_GRASS","HILL_SAND","PLAIN_ICE","PLAIN_SWAMP","PLAIN_FOREST","PLAIN_GRASS","PLAIN_SAND","PLAIN_MARSH","PLAIN_SOIL","PLAIN","WATER","WATER_ICE","OCEAN","OCEAN_ICE","MapEntity","props","x","y","world","icon","color","backgroundColor","this","_x","_y","_icon","_world","_color","_backgroundColor","registerMapEntity","Math","sqrt","pow","Actor","type","entity","_type","_events","_entity","id","name","Object","keys","year","events","map","event","description","actors","reduce","actor","index","replaceAll","label","push","Town","Road","Culture","Chronicle","_actors","actorsProp","registerActors","forEach","add","Adventurer","fullName","culture","_culture","_id","random","guid","_adventurers","_creation","_name","Name","seed","_settings","youths","_titles","governor","_cache","alive","toString","adventurer","adventurers","position","indexOf","splice","filter","isAlive","adventurersInfo","newAdventurers","adventurerInfo","createAdventurer","addAdventurers","town","creation","createAdventurers","Array","integer","min","max","fill","birth","addEvent","AdventurerActor","TownActor","info","getAge","spouse","gender","genders","FEMALE","children","child","wifes","sort","wifeOne","wifeTwo","length","amount","slice","wife","husband","reproduce","childrenStory","MALE","males","females","spouses","possibleSpouses","ceil","shuffle","otherSpouse","find","possibleSpouse","extendedFamily","includes","otherSpousePosition","marriagesStory","deaths","killAdventurers","titles","deathStory","pickone","heir","childOne","childTwo","governorStory","_towns","king","townsInfo","newTowns","townInfo","getHabitableCoords","newTown","CultureActor","kingStory","towns","createTowns","townCreationStory","bool","likelihood","lookup","attempt","space","floor","size","fromX","fromY","toX","width","toY","height","getMapEntityAt","newRoad","createRoad","RoadActor","newSettlementStory","tick","CultureGeneratorCulture","Tile","sand","rainfall","elevation","vegetation","temperature","_","tileTypes","lighten","hex","getNoiseFactory","octaves","amplitude","frequency","persistence","noise","makeRectangle","makeNoise2D","getTileFactory","cache","getSandNoise","getRainfallNoise","getElevationNoise","getVegetationNoise","getTemperatureNoise","getNoise","lowerLimit","higherLimit","getLinearNoiseFactory","coordinates","_coordinates","World","canvas","offset","onTownSelection","_random","Chance","_roads","_year","_cultures","_chronicles","_offset","_canvas","_onTownSelection","_context","setupContext","handleClick","getTile","mapEntities","Error","attempts","tile","xProp","yProp","chosenMapEntity","values","mapEntity","getDistance","getActor","entities","source","destination","xTo","xFrom","yTo","surroundingTiles","currentTile","weight","floating","newMap","diagonals","calculateG","nodeOne","nodeTwo","distance","tileOne","tileTwo","abs","reverse","pop","culturesInfo","newCulture","cultureInfo","positionX","positionY","ui","fillStyle","fillRect","fillText","context","strokeStyle","lineWidth","coordinate","beginPath","coords","lineTo","stroke","paintLine","road","cultures","createCultures","onClick","getContext","textAlign","font","lineCap","lineJoin","addEventListener","e","ev","rect","getBoundingClientRect","clientX","left","clientY","top","getCursorPosition","React","createContext","AppTime","useContext","AppContext","useState","setYear","useCallback","draw","useEffect","className","memo","Tabs","tabs","selectedTab","setSelectedTab","tabItems","useMemo","tab","classes","tabIndex","role","join","content","actorID","setSelectedActorInfo","chronicles","Dialog","onCloseProp","onClose","style","TownNoblesTabContent","TownTitlesTabContent","townProp","title","ActorHistoryTabContent","eventsDOM","years","getYear","placeholder","token","split","TownDialog","alt","src","AdventurerFamilyTabContent","adventurerProp","toWords","ToWords","dob","pronoun","age","convert","toLowerCase","parentsDOM","parents","son","father","mother","spouseDOM","appearance","bodyAttributes","soulAttributes","facets","siblings","grandparents","piblings","cousins","familyDOM","AdventurerDialog","AdventurerInfoTabContent","CultureInfoTabContent","cultureProp","ethics","beliefs","CultureTownsTabContent","CultureTitlesTabContent","CultureOpinionsTabContent","culturesDOM","otherCulture","getOpinion","CultureDialog","App","canvasRef","useRef","setWorld","selectedActorInfo","useLayoutEffect","current","window","onDialogClose","dialogDOM","Provider","value","ref","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.98a8d15d.chunk.js","sourcesContent":["module.exports = {\r\n  MOUNTAIN_ICE: \"MOUNTAIN_ICE\",\r\n  MOUNTAIN: \"MOUNTAIN\",\r\n\r\n  HILL_ICE: \"HILL_ICE\",\r\n  HILL: \"HILL\",\r\n  HILL_SOIL: \"HILL_SOIL\",\r\n  HILL_SWAMP: \"HILL_SWAMP\",\r\n  HILL_GRASS: \"HILL_GRASS\",\r\n  HILL_SAND: \"HILL_SAND\",\r\n\r\n  PLAIN_ICE: \"PLAIN_ICE\",\r\n  PLAIN_SWAMP: \"PLAIN_SWAMP\",\r\n  PLAIN_FOREST: \"PLAIN_FOREST\",\r\n  PLAIN_GRASS: \"PLAIN_GRASS\",\r\n  PLAIN_SAND: \"PLAIN_SAND\",\r\n  PLAIN_MARSH: \"PLAIN_MARSH\",\r\n  PLAIN_SOIL: \"PLAIN_SOIL\",\r\n  PLAIN: \"PLAIN\",\r\n\r\n  WATER: \"WATER\",\r\n  WATER_ICE: \"WATER_ICE\",\r\n\r\n  OCEAN: \"OCEAN\",\r\n  OCEAN_ICE: \"OCEAN_ICE\"\r\n};\r\n","export default class MapEntity {\r\n  constructor(props) {\r\n    const { x, y, world, icon, color, backgroundColor } = props;\r\n\r\n    this._x = x;\r\n    this._y = y;\r\n    this._icon = icon;\r\n    this._world = world;\r\n    this._color = color;\r\n    this._backgroundColor = backgroundColor;\r\n\r\n    this._world.registerMapEntity(this);\r\n  }\r\n\r\n  get x() {\r\n    return this._x;\r\n  }\r\n\r\n  get y() {\r\n    return this._y;\r\n  }\r\n\r\n  get icon() {\r\n    return this._icon;\r\n  }\r\n\r\n  get color() {\r\n    return this._color;\r\n  }\r\n\r\n  get backgroundColor() {\r\n    return this._backgroundColor;\r\n  }\r\n\r\n  get ui() {\r\n    return {\r\n      icon: this._icon,\r\n      color: this._color,\r\n      backgroundColor: this._backgroundColor\r\n    };\r\n  }\r\n\r\n  getDistance(x, y) {\r\n    return Math.sqrt(Math.pow(x - this._x, 2) + Math.pow(y - this._y, 2));\r\n  }\r\n}\r\n","export default class Actor {\r\n  constructor(props) {\r\n    const { type, entity } = props;\r\n\r\n    this._type = type;\r\n    this._events = {};\r\n    this._entity = entity;\r\n  }\r\n\r\n  get type() {\r\n    return this._type;\r\n  }\r\n\r\n  get entity() {\r\n    return this._entity;\r\n  }\r\n\r\n  get id() {\r\n    return this._entity.id;\r\n  }\r\n\r\n  get label() {\r\n    return this._entity.name;\r\n  }\r\n\r\n  get years() {\r\n    return Object.keys(this._events);\r\n  }\r\n\r\n  getYear(year) {\r\n    const events = this._events[year];\r\n\r\n    return events == null\r\n      ? []\r\n      : events.map((event) => {\r\n          const description = event.actors.reduce(\r\n            (description, actor, index) => {\r\n              return description.replaceAll(`{${index}}`, actor.label);\r\n            },\r\n            event.description\r\n          );\r\n\r\n          return {\r\n            event,\r\n            description\r\n          };\r\n        });\r\n  }\r\n\r\n  add(event) {\r\n    let events = this._events[event.year];\r\n    if (events == null) events = this._events[event.year] = [];\r\n    events.push(event);\r\n  }\r\n}\r\n","import Actor from \"./Actor\";\r\n\r\nexport default class Town extends Actor {\r\n  constructor(entity) {\r\n    super({\r\n      entity,\r\n      type: \"town\"\r\n    });\r\n  }\r\n}\r\n","import Actor from \"./Actor\";\n\nexport default class Road extends Actor {\n  constructor(entity) {\n    super({\n      entity,\n      type: \"road\"\n    });\n  }\n}\n","import Actor from \"./Actor\";\r\n\r\nexport default class Culture extends Actor {\r\n  constructor(entity) {\r\n    super({\r\n      entity,\r\n      type: \"culture\"\r\n    });\r\n  }\r\n}\r\n","export default class Chronicle {\r\n  constructor() {\r\n    this._events = {};\r\n    this._actors = {};\r\n  }\r\n\r\n  get events() {\r\n    return { ...this._events };\r\n  }\r\n\r\n  get years() {\r\n    return Object.keys(this._events);\r\n  }\r\n\r\n  getActor(type, id) {\r\n    return this._actors[type] == null ? null : this._actors[type][id];\r\n  }\r\n\r\n  registerActors(...actors) {\r\n    return actors.map((actor) => {\r\n      let type = this._actors[actor.type];\r\n      if (type == null) type = this._actors[actor.type] = {};\r\n      if (type[actor.id] == null) type[actor.id] = actor;\r\n      return type[actor.id];\r\n    });\r\n  }\r\n\r\n  getYear(year) {\r\n    const events = this._events[year];\r\n\r\n    return events == null\r\n      ? []\r\n      : events.map((event) => {\r\n          const description = event.actors.reduce(\r\n            (description, actor, index) => {\r\n              return description.replaceAll(`{${index}}`, actor.label);\r\n            },\r\n            event.description\r\n          );\r\n\r\n          return {\r\n            event,\r\n            description\r\n          };\r\n        });\r\n  }\r\n\r\n  add(year, description, actorsProp = []) {\r\n    let events = this._events[year];\r\n\r\n    if (events == null) events = this._events[year] = [];\r\n\r\n    const actors = this.registerActors(...actorsProp);\r\n\r\n    const event = {\r\n      year,\r\n      actors,\r\n      description\r\n    };\r\n\r\n    events.push(event);\r\n    actors.forEach((actor) => actor.add(event));\r\n  }\r\n}\r\n","import Actor from \"./Actor\";\r\n\r\nexport default class Adventurer extends Actor {\r\n  constructor(entity) {\r\n    super({\r\n      entity,\r\n      type: \"adventurer\"\r\n    });\r\n  }\r\n\r\n  get label() {\r\n    return this._entity.fullName;\r\n  }\r\n}\r\n","import { Name } from \"name-df-generator\";\r\n\r\nimport MapEntity from \"./MapEntity\";\r\nimport governorStory from \"./stories/town/governor\";\r\nimport deathStory from \"./stories/town/death\";\r\nimport inhabitStory from \"./stories/town/inhabit\";\r\nimport childrenStory from \"./stories/town/children\";\r\nimport marriagesStory from \"./stories/town/marriages\";\r\n\r\nexport default class Town extends MapEntity {\r\n  constructor(props = {}) {\r\n    super({\r\n      icon: \"◙\",\r\n      color: \"orange\",\r\n      backgroundColor: \"#222\",\r\n      world: props.culture.world,\r\n      ...props\r\n    });\r\n\r\n    const { culture } = props;\r\n\r\n    this._culture = culture;\r\n    this._id = this.random.guid();\r\n\r\n    this._adventurers = [];\r\n    this._creation = this.world.year;\r\n    this._name = new Name({ seed: this._id });\r\n\r\n    this._settings = {\r\n      youths: 15\r\n    };\r\n\r\n    this._titles = {\r\n      governor: null\r\n    };\r\n\r\n    this._cache = {\r\n      alive: []\r\n    };\r\n  }\r\n\r\n  get id() {\r\n    return this._id;\r\n  }\r\n\r\n  get culture() {\r\n    return this._culture;\r\n  }\r\n\r\n  get world() {\r\n    return this._culture.world;\r\n  }\r\n\r\n  get random() {\r\n    return this.world.random;\r\n  }\r\n\r\n  get name() {\r\n    return this._name.toString();\r\n  }\r\n\r\n  get creation() {\r\n    return this._creation;\r\n  }\r\n\r\n  get adventurers() {\r\n    return [...this._cache.alive];\r\n  }\r\n\r\n  get titles() {\r\n    return { ...this._titles };\r\n  }\r\n\r\n  get governor() {\r\n    return this._titles.governor;\r\n  }\r\n\r\n  set governor(adventurer) {\r\n    this._titles.governor = adventurer;\r\n  }\r\n\r\n  killAdventurers(...adventurers) {\r\n    adventurers.forEach((adventurer) => {\r\n      const position = this._cache.alive.indexOf(adventurer);\r\n      if (position === -1) return;\r\n      this._cache.alive.splice(position, 1);\r\n    });\r\n  }\r\n\r\n  addAdventurers(...adventurers) {\r\n    this._adventurers.push(...adventurers);\r\n\r\n    this._cache.alive.push(\r\n      ...adventurers.filter((adventurer) => adventurer.isAlive(this.world.year))\r\n    );\r\n  }\r\n\r\n  createAdventurers(...adventurersInfo) {\r\n    const newAdventurers = adventurersInfo.map((adventurerInfo = {}) => {\r\n      return this._culture.createAdventurer({\r\n        ...adventurerInfo\r\n      });\r\n    });\r\n\r\n    this.addAdventurers(...newAdventurers);\r\n\r\n    return newAdventurers;\r\n  }\r\n\r\n  tick() {\r\n    inhabitStory(this);\r\n    childrenStory(this);\r\n    marriagesStory(this);\r\n    deathStory(this);\r\n    governorStory(this);\r\n  }\r\n}\r\n","import {\r\n  Town as TownActor,\r\n  Adventurer as AdventurerActor\r\n} from \"../../chronicles\";\r\n\r\nexport default function inhabit(town) {\r\n  if (town.creation + 3 <= town.world.year) return;\r\n\r\n  const newAdventurers = town.createAdventurers(\r\n    ...Array(town.random.integer({ min: 9, max: 11 }))\r\n      .fill()\r\n      .map(() => {\r\n        return {\r\n          birth: town._world.year - town.random.integer({ min: 18, max: 26 })\r\n        };\r\n      })\r\n  );\r\n\r\n  newAdventurers.forEach((adventurer) => {\r\n    town.world.addEvent(\"{0} settled in {1}\", [\r\n      new AdventurerActor(adventurer),\r\n      new TownActor(town)\r\n    ]);\r\n  });\r\n}\r\n","import {\r\n  Town as TownActor,\r\n  Adventurer as AdventurerActor\r\n} from \"../../chronicles\";\r\n\r\nimport { genders } from \"culture-generator\";\r\n\r\nexport default function children(town) {\r\n  const { wifes, youths } = town.adventurers.reduce(\r\n    (info, adventurer) => {\r\n      if (adventurer.getAge(town.world.year) < 35) {\r\n        info.youths += 1;\r\n      }\r\n\r\n      if (adventurer.spouse == null) return info;\r\n      if (adventurer.gender !== genders.FEMALE) return info;\r\n\r\n      const lastBirth = Math.min(\r\n        ...adventurer.children.map((child) => child.getAge(town.world.year))\r\n      );\r\n\r\n      if (lastBirth > 2) info.wifes.push(adventurer);\r\n\r\n      return info;\r\n    },\r\n    {\r\n      wifes: [],\r\n      youths: 0\r\n    }\r\n  );\r\n\r\n  wifes.sort((wifeOne, wifeTwo) => {\r\n    return wifeOne.children.length - wifeTwo.children.length;\r\n  });\r\n\r\n  const amount = town.random.integer({\r\n    min: 0,\r\n    max: Math.max(0, Math.min(wifes.length, town._settings.youths - youths))\r\n  });\r\n\r\n  wifes.slice(0, amount).forEach((wife) => {\r\n    const husband = wife.spouse;\r\n    const child = wife.reproduce(husband, { birth: town.world.year });\r\n\r\n    town.addAdventurers(child);\r\n\r\n    town.world.addEvent(\"{0} and {1} had a child who they named {2} in {3}\", [\r\n      new AdventurerActor(husband),\r\n      new AdventurerActor(wife),\r\n      new AdventurerActor(child),\r\n      new TownActor(town)\r\n    ]);\r\n  });\r\n}\r\n","import {\r\n  Town as TownActor,\r\n  Adventurer as AdventurerActor\r\n} from \"../../chronicles\";\r\n\r\nimport { genders } from \"culture-generator\";\r\n\r\nexport default function marriages(town) {\r\n  const adventurers = town.adventurers;\r\n\r\n  const { males, females } = adventurers.reduce(\r\n    (info, adventurer) => {\r\n      if (\r\n        adventurer.spouse != null &&\r\n        adventurer.spouse.isAlive(town.world.year) === true\r\n      )\r\n        return info;\r\n      if (adventurer.getAge(town.world.year) < 18) return info;\r\n\r\n      info[adventurer.gender === genders.MALE ? \"males\" : \"females\"].push(\r\n        adventurer\r\n      );\r\n\r\n      return info;\r\n    },\r\n    {\r\n      males: [],\r\n      females: []\r\n    }\r\n  );\r\n\r\n  const spouses = males.length > females.length ? males : females;\r\n  const possibleSpouses = spouses === females ? males : females;\r\n\r\n  const amount = town.random.integer({\r\n    min: 0,\r\n    max: Math.ceil(spouses.length / 2)\r\n  });\r\n\r\n  town.random\r\n    .shuffle(spouses)\r\n    .slice(0, amount)\r\n    .forEach((spouse) => {\r\n      let otherSpouse = town.random\r\n        .shuffle(possibleSpouses)\r\n        .find((possibleSpouse) => {\r\n          return (\r\n            spouse.extendedFamily.includes(possibleSpouse) === false &&\r\n            possibleSpouse.extendedFamily.includes(spouse) === false\r\n          );\r\n        });\r\n\r\n      if (otherSpouse == null) {\r\n        [otherSpouse] = town.createAdventurers({\r\n          gender:\r\n            spouse.gender !== genders.MALE ? genders.MALE : genders.FEMALE,\r\n          birth:\r\n            town.world.year -\r\n            town.random.integer({\r\n              min: 18,\r\n              max: 26\r\n            })\r\n        });\r\n      }\r\n\r\n      const otherSpousePosition = possibleSpouses.indexOf(otherSpouse);\r\n\r\n      if (otherSpousePosition !== -1) {\r\n        possibleSpouses.splice(otherSpousePosition, 1);\r\n      }\r\n\r\n      spouse.spouse = otherSpouse;\r\n\r\n      town.world.addEvent(\"{0} married {1} in {2}\", [\r\n        new AdventurerActor(spouse),\r\n        new AdventurerActor(otherSpouse),\r\n        new TownActor(town)\r\n      ]);\r\n    });\r\n}\r\n","import {\r\n  Town as TownActor,\r\n  Adventurer as AdventurerActor\r\n} from \"../../chronicles\";\r\n\r\nexport default function death(town) {\r\n  const deaths = town.adventurers.filter((adventurer) => {\r\n    return adventurer.isAlive(town.world.year) === false;\r\n  });\r\n\r\n  town.killAdventurers(...deaths);\r\n\r\n  deaths.forEach((adventurer) => {\r\n    if (town.titles.governor === adventurer) {\r\n      town.world.addEvent(\"Governor {0} of {1} died\", [\r\n        new AdventurerActor(adventurer),\r\n        new TownActor(town)\r\n      ]);\r\n    } else {\r\n      town.world.addEvent(\"{0} died in {1}\", [\r\n        new AdventurerActor(adventurer),\r\n        new TownActor(town)\r\n      ]);\r\n    }\r\n  });\r\n}\r\n","import {\r\n  Town as TownActor,\r\n  Adventurer as AdventurerActor\r\n} from \"../../chronicles\";\r\n\r\nexport default function governor(town) {\r\n  const adventurers = town.adventurers;\r\n\r\n  if (town.governor == null) {\r\n    town.governor = town.random.pickone(\r\n      adventurers.filter(\r\n        (adventurer) => adventurer.getAge(town.world.year) > 18\r\n      )\r\n    );\r\n\r\n    town.world.addEvent(\"{0} was given the position of Governor of {1}\", [\r\n      new AdventurerActor(town.governor),\r\n      new TownActor(town)\r\n    ]);\r\n  }\r\n\r\n  if (town.governor.isAlive(town.world.year) === true) return;\r\n\r\n  let heir = town.governor.children\r\n    .filter((adventurer) => {\r\n      return adventurer.isAlive(town.world.year);\r\n    })\r\n    .sort((childOne, childTwo) => {\r\n      return childTwo.getAge(town.year) - childOne.getAge(town.year);\r\n    })[0];\r\n\r\n  if (heir == null) {\r\n    heir = town.governor.extendedFamily\r\n      .filter((adventurer) => {\r\n        return adventurer.isAlive(town.world.year);\r\n      })\r\n      .sort((childOne, childTwo) => {\r\n        return childTwo.getAge(town.year) - childOne.getAge(town.year);\r\n      })[0];\r\n  }\r\n\r\n  if (adventurers.length === 0) return;\r\n\r\n  if (heir == null) {\r\n    heir = town.random.pickone(adventurers);\r\n  }\r\n\r\n  town.governor = heir;\r\n  town.world.addEvent(\"{0} was given the position of Governor of {1}\", [\r\n    new AdventurerActor(town.governor),\r\n    new TownActor(town)\r\n  ]);\r\n}\r\n","import { Culture as CultureGeneratorCulture } from \"culture-generator\";\r\n\r\nimport Town from \"./Town\";\r\nimport kingStory from \"./stories/culture/king\";\r\nimport townCreationStory from \"./stories/culture/town-creation\";\r\nimport newSettlementStory from \"./stories/culture/new-settlement\";\r\n\r\nexport default class Culture extends CultureGeneratorCulture {\r\n  constructor(props) {\r\n    super({\r\n      seed: props.world.random.guid(),\r\n      ...props\r\n    });\r\n\r\n    const { world } = props;\r\n\r\n    this._towns = [];\r\n    this._world = world;\r\n\r\n    this._titles = {\r\n      king: null\r\n    };\r\n  }\r\n\r\n  get world() {\r\n    return this._world;\r\n  }\r\n\r\n  get random() {\r\n    return this.world.random;\r\n  }\r\n\r\n  get towns() {\r\n    return this._towns;\r\n  }\r\n\r\n  get adventurers() {\r\n    return this._towns.reduce((adventurers, town) => {\r\n      adventurers.push(...town.adventurers);\r\n      return adventurers;\r\n    }, []);\r\n  }\r\n\r\n  get titles() {\r\n    return { ...this._titles };\r\n  }\r\n\r\n  get king() {\r\n    return this._titles.king;\r\n  }\r\n\r\n  set king(adventurer) {\r\n    this._titles.king = adventurer;\r\n  }\r\n\r\n  createTowns(...townsInfo) {\r\n    const newTowns = townsInfo.map((townInfo = {}) => {\r\n      const { x, y } =\r\n        townInfo.x != null || townInfo.y != null\r\n          ? {\r\n              x: townInfo.x,\r\n              y: townInfo.y\r\n            }\r\n          : this.world.getHabitableCoords();\r\n\r\n      const newTown = new Town({\r\n        x,\r\n        y,\r\n        ...townInfo,\r\n        culture: this\r\n      });\r\n\r\n      return newTown;\r\n    });\r\n\r\n    this._towns.push(...newTowns);\r\n\r\n    return newTowns;\r\n  }\r\n\r\n  tick() {\r\n    kingStory(this);\r\n    townCreationStory(this);\r\n    newSettlementStory(this);\r\n    this._towns.forEach((town) => {\r\n      town.tick();\r\n    });\r\n  }\r\n}\r\n","import {\r\n  Culture as CultureActor,\r\n  Adventurer as AdventurerActor\r\n} from \"../../chronicles\";\r\n\r\nexport default function king(culture) {\r\n  const adventurers = culture.adventurers;\r\n\r\n  if (adventurers.length === 0) return;\r\n\r\n  if (culture.king == null) {\r\n    culture.king = culture.random.pickone(\r\n      adventurers.filter(\r\n        (adventurer) => adventurer.getAge(culture.world.year) > 18\r\n      )\r\n    );\r\n\r\n    culture.world.addEvent(\"King {0} ascended the thrown of {1}\", [\r\n      new AdventurerActor(culture.king),\r\n      new CultureActor(culture)\r\n    ]);\r\n  }\r\n\r\n  if (culture.king.isAlive(culture.world.year) === true) return;\r\n\r\n  let heir = culture.king.children\r\n    .filter((adventurer) => {\r\n      return adventurer.isAlive(culture.world.year);\r\n    })\r\n    .sort((childOne, childTwo) => {\r\n      return childTwo.getAge(culture.year) - childOne.getAge(culture.year);\r\n    })[0];\r\n\r\n  if (heir == null) {\r\n    heir = culture.king.extendedFamily\r\n      .filter((adventurer) => {\r\n        return adventurer.isAlive(culture.world.year);\r\n      })\r\n      .sort((childOne, childTwo) => {\r\n        return childTwo.getAge(culture.year) - childOne.getAge(culture.year);\r\n      })[0];\r\n  }\r\n\r\n  if (adventurers.length === 0) return;\r\n\r\n  if (heir == null) {\r\n    heir = culture.random.pickone(adventurers);\r\n  }\r\n\r\n  culture.king = heir;\r\n  culture.world.addEvent(\"King {0} ascended the thrown of {1}\", [\r\n    new AdventurerActor(culture.king),\r\n    new CultureActor(culture)\r\n  ]);\r\n}\r\n","import { Town as TownActor, Culture as CultureActor } from \"../../chronicles\";\r\n\r\nexport default function cultureTownCreation(culture) {\r\n  if (culture.towns.length > 0) return;\r\n\r\n  const [newTown] = culture.createTowns({\r\n    culture\r\n  });\r\n\r\n  culture.world.addEvent(\"The people of {0} founded {1}\", [\r\n    new CultureActor(culture),\r\n    new TownActor(newTown)\r\n  ]);\r\n}\r\n","import {\r\n  Town as TownActor,\r\n  Road as RoadActor,\r\n  Culture as CultureActor\r\n} from \"../../chronicles\";\r\n\r\nexport default function newSettlement(culture) {\r\n  if (culture.random.bool({ likelihood: 80 }) === true) return;\r\n\r\n  lookup: for (let attempt = 0; attempt < 4; attempt++) {\r\n    const [town] = culture.towns;\r\n\r\n    const size = 4;\r\n    const space = Math.floor(size / 2);\r\n\r\n    const { x, y } = culture.world.getHabitableCoords({\r\n      fromX: Math.max(0, town.x - size),\r\n      fromY: Math.max(0, town.y - size),\r\n      toX: Math.min(culture.world.width, town.x + size),\r\n      toY: Math.min(culture.world.height, town.y + size)\r\n    });\r\n\r\n    const fromX = Math.max(0, x - space);\r\n    const fromY = Math.max(0, y - space);\r\n    const toX = Math.min(culture.world.width, x + space);\r\n    const toY = Math.min(culture.world.height, y + space);\r\n\r\n    for (let y = fromY; y < toY; y++) {\r\n      for (let x = fromX; x < toX; x++) {\r\n        if (culture.world.getMapEntityAt(x, y) != null) continue lookup;\r\n      }\r\n    }\r\n\r\n    const [newTown] = culture.createTowns({\r\n      x,\r\n      y,\r\n      culture\r\n    });\r\n\r\n    culture.world.addEvent(\r\n      \"{0} , a {1} settlment, has been founded by people from {2}\",\r\n      [new TownActor(newTown), new CultureActor(culture), new TownActor(town)]\r\n    );\r\n\r\n    const newRoad = culture.world.createRoad(town, newTown);\r\n\r\n    culture.world.addEvent(\"{0} is now connecting {1} and {0}\", [\r\n      new RoadActor(newRoad),\r\n      new TownActor(town),\r\n      new TownActor(newTown)\r\n    ]);\r\n\r\n    break;\r\n  }\r\n}\r\n","import color from \"color\";\r\n\r\nimport tileTypes from \"./tileTypes\";\r\n\r\nexport default class Tile {\r\n  constructor(props) {\r\n    const {\r\n      x,\r\n      y,\r\n      random,\r\n      sand = 0,\r\n      rainfall = 0,\r\n      elevation = 0,\r\n      vegetation = 0,\r\n      temperature = 0\r\n    } = props;\r\n\r\n    this._ = {\r\n      x,\r\n      y,\r\n\r\n      sand,\r\n      random,\r\n      rainfall,\r\n      elevation,\r\n      vegetation,\r\n      temperature\r\n    };\r\n  }\r\n\r\n  get id() {\r\n    return `${this.x}-${this.y}`;\r\n  }\r\n\r\n  get x() {\r\n    return this._.x;\r\n  }\r\n\r\n  get y() {\r\n    return this._.y;\r\n  }\r\n\r\n  get sand() {\r\n    return this._.sand;\r\n  }\r\n\r\n  get rainfall() {\r\n    return this._.rainfall;\r\n  }\r\n\r\n  get elevation() {\r\n    return this._.elevation;\r\n  }\r\n\r\n  get vegetation() {\r\n    return this._.vegetation;\r\n  }\r\n\r\n  get temperature() {\r\n    return this._.temperature;\r\n  }\r\n\r\n  get random() {\r\n    return this._.random;\r\n  }\r\n\r\n  get type() {\r\n    if (this.elevation > 0.9) {\r\n      return this.temperature < 0.4 && this.rainfall > 0.6\r\n        ? tileTypes.MOUNTAIN_ICE\r\n        : tileTypes.MOUNTAIN;\r\n    }\r\n\r\n    if (this.elevation > 0.8) {\r\n      if (this.temperature < 0.4) {\r\n        return this.rainfall > 0.6 ? tileTypes.HILL_ICE : tileTypes.HILL;\r\n      }\r\n\r\n      if (this.rainfall > 0.8) {\r\n        return tileTypes.HILL_SWAMP;\r\n      }\r\n\r\n      if (this.rainfall > 0.4) {\r\n        return this.vegetation > 0.6\r\n          ? tileTypes.HILL_GRASS\r\n          : tileTypes.HILL_SOIL;\r\n      }\r\n\r\n      return this.sand > 0.7 ? tileTypes.HILL_SAND : tileTypes.HILL;\r\n    }\r\n\r\n    if (this.elevation > 0.5) {\r\n      if (this.temperature < 0.4) {\r\n        return this.rainfall > 0.6 ? tileTypes.PLAIN_ICE : tileTypes.PLAIN;\r\n      }\r\n\r\n      if (this.rainfall > 0.8) {\r\n        return this.vegetation > 0.8\r\n          ? tileTypes.PLAIN_SWAMP\r\n          : tileTypes.PLAIN_MARSH;\r\n      }\r\n\r\n      if (this.rainfall > 0.4) {\r\n        return this.vegetation > 0.8\r\n          ? tileTypes.PLAIN_FOREST\r\n          : this.vegetation > 0.3\r\n          ? tileTypes.PLAIN_GRASS\r\n          : tileTypes.PLAIN_SOIL;\r\n      }\r\n\r\n      return this.sand > 0.7 ? tileTypes.PLAIN_SAND : tileTypes.PLAIN;\r\n    }\r\n\r\n    if (this.elevation > 0.4) {\r\n      return this.temperature > 0.4 ? tileTypes.WATER : tileTypes.WATER_ICE;\r\n    }\r\n\r\n    return this.temperature > 0.4 ? tileTypes.OCEAN : tileTypes.OCEAN_ICE;\r\n  }\r\n\r\n  get ui() {\r\n    let info = {};\r\n\r\n    switch (this.type) {\r\n      case tileTypes.MOUNTAIN_ICE: {\r\n        info = {\r\n          icon: \"⌂\",\r\n          color: \"#FFFFFF\",\r\n          backgroundColor: \"#222\"\r\n        };\r\n        break;\r\n      }\r\n      case tileTypes.MOUNTAIN: {\r\n        info = {\r\n          icon: \"⌂\",\r\n          color: \"#aaa\",\r\n          backgroundColor: \"#222\"\r\n        };\r\n        break;\r\n      }\r\n      case tileTypes.HILL_ICE: {\r\n        info = {\r\n          icon: \"∩\",\r\n          color: \"#FFFFFF\",\r\n          backgroundColor: \"#222\"\r\n        };\r\n        break;\r\n      }\r\n      case tileTypes.HILL: {\r\n        const backgroundColor = this.random.pickone([\"#444\", \"#333\"]);\r\n\r\n        info = {\r\n          icon: \"∩\",\r\n          color: color(backgroundColor).lighten(1.5).hex(),\r\n          backgroundColor: backgroundColor\r\n        };\r\n        break;\r\n      }\r\n      case tileTypes.HILL_SOIL: {\r\n        const backgroundColor = this.random.pickone([\"#1e1a15\", \"#27221b\"]);\r\n\r\n        info = {\r\n          icon: \"∩\",\r\n          color: color(backgroundColor).lighten(1.5).hex(),\r\n          backgroundColor: backgroundColor\r\n        };\r\n        break;\r\n      }\r\n      case tileTypes.HILL_SWAMP: {\r\n        const backgroundColor = this.random.pickone([\"#1b2413\", \"#192211\"]);\r\n\r\n        info = {\r\n          icon: \"∩\",\r\n          color: color(backgroundColor).lighten(1.5).hex(),\r\n          backgroundColor\r\n        };\r\n        break;\r\n      }\r\n      case tileTypes.HILL_GRASS: {\r\n        const backgroundColor = this.random.pickone([\"#2d3a22\", \"#25301c\"]);\r\n        info = {\r\n          icon: \"∩\",\r\n          color: color(backgroundColor).lighten(1.5).hex(),\r\n          backgroundColor\r\n        };\r\n        break;\r\n      }\r\n      case tileTypes.HILL_SAND: {\r\n        const backgroundColor = this.random.pickone([\"#483c1a\", \"#392f14\"]);\r\n\r\n        info = {\r\n          icon: \"∩\",\r\n          color: color(backgroundColor).lighten(1.5).hex(),\r\n          backgroundColor\r\n        };\r\n        break;\r\n      }\r\n      case tileTypes.PLAIN_ICE: {\r\n        const backgroundColor = this.random.pickone([\"#888\", \"#999\"]);\r\n\r\n        info = {\r\n          icon: \"≈\",\r\n          color: color(backgroundColor).lighten(1.5).hex(),\r\n          backgroundColor\r\n        };\r\n        break;\r\n      }\r\n      case tileTypes.PLAIN_SWAMP: {\r\n        const backgroundColor = this.random.pickone([\"#1b2413\", \"#192211\"]);\r\n\r\n        info = {\r\n          icon: this.random.pickone(['\"', \"⌠\"]),\r\n          color: color(backgroundColor).lighten(1.5).hex(),\r\n          backgroundColor\r\n        };\r\n        break;\r\n      }\r\n      case tileTypes.PLAIN_MARSH: {\r\n        const backgroundColor = this.random.pickone([\"#151a0f\", \"#171f0f\"]);\r\n\r\n        info = {\r\n          icon: this.random.pickone(['\"', \"ⁿ\"]),\r\n          color: color(backgroundColor).lighten(1.5).hex(),\r\n          backgroundColor\r\n        };\r\n        break;\r\n      }\r\n      case tileTypes.PLAIN_FOREST: {\r\n        const backgroundColor = this.random.pickone([\"#2d3a22\", \"#25301c\"]);\r\n\r\n        info = {\r\n          icon: this.random.pickone([\"♠\", \"♣\", \"↑\"]),\r\n          color: color(backgroundColor).lighten(1.5).hex(),\r\n          backgroundColor\r\n        };\r\n        break;\r\n      }\r\n      case tileTypes.PLAIN_GRASS: {\r\n        const backgroundColor = this.random.pickone([\"#2d3a22\", \"#25301c\"]);\r\n\r\n        info = {\r\n          icon: this.random.pickone([\"ⁿ\", \".\"]),\r\n          color: color(backgroundColor).lighten(1.5).hex(),\r\n          backgroundColor\r\n        };\r\n        break;\r\n      }\r\n      case tileTypes.PLAIN_SOIL: {\r\n        const backgroundColor = this.random.pickone([\"#1e1a15\", \"#27221b\"]);\r\n\r\n        info = {\r\n          icon: this.random.pickone([\"ⁿ\", \".\"]),\r\n          color: color(backgroundColor).lighten(1.5).hex(),\r\n          backgroundColor\r\n        };\r\n        break;\r\n      }\r\n      case tileTypes.PLAIN_SAND: {\r\n        const backgroundColor = this.random.pickone([\"#483c1a\", \"#392f14\"]);\r\n\r\n        info = {\r\n          icon: \"≈\",\r\n          color: color(backgroundColor).lighten(1.5).hex(),\r\n          backgroundColor\r\n        };\r\n        break;\r\n      }\r\n      case tileTypes.PLAIN: {\r\n        const backgroundColor = this.random.pickone([\"#444\", \"#555\"]);\r\n        info = {\r\n          icon: \".\",\r\n          color: color(backgroundColor).lighten(1.5).hex(),\r\n          backgroundColor\r\n        };\r\n        break;\r\n      }\r\n      case tileTypes.WATER: {\r\n        info = {\r\n          icon: \"~\",\r\n          color: \"#35506f\",\r\n          backgroundColor: \"#1d2d3f\"\r\n        };\r\n        break;\r\n      }\r\n      case tileTypes.WATER_ICE: {\r\n        info = {\r\n          icon: this.random.pickone([\"▒\", \"░\"]),\r\n          color: \"#35506f\",\r\n          backgroundColor: \"#1d2d3f\"\r\n        };\r\n        break;\r\n      }\r\n      case tileTypes.OCEAN: {\r\n        info = {\r\n          icon: \"≈\",\r\n          color: \"#304177\",\r\n          backgroundColor: \"#172331\"\r\n        };\r\n        break;\r\n      }\r\n      case tileTypes.OCEAN_ICE: {\r\n        info = {\r\n          icon: this.random.pickone([\"▒\", \"░\"]),\r\n          color: \"#35506f\",\r\n          backgroundColor: \"#1d2d3f\"\r\n        };\r\n        break;\r\n      }\r\n      default: {\r\n        info = {\r\n          icon: this.random.pickone([\"X\"]),\r\n          color: \"#ff00d4\",\r\n          backgroundColor: \"#ff00d4\"\r\n        };\r\n        break;\r\n      }\r\n    }\r\n\r\n    return info;\r\n  }\r\n}\r\n","import { makeRectangle } from \"fractal-noise\";\r\nimport { makeNoise2D } from \"open-simplex-noise\";\r\n\r\nexport default function getNoiseFactory(props = {}) {\r\n  const {\r\n    seed,\r\n    width,\r\n    height,\r\n    octaves = 10,\r\n    amplitude = 1,\r\n    frequency = 0.025,\r\n    persistence = 0.5\r\n  } = props;\r\n\r\n  const noise = makeRectangle(width, height, makeNoise2D(seed), {\r\n    octaves,\r\n    amplitude,\r\n    frequency,\r\n    persistence\r\n  });\r\n\r\n  return function getNoise(x, y) {\r\n    return noise[x][y] + 0.5;\r\n  };\r\n}\r\n","import Tile from \"../Tile\";\r\nimport getNoiseFactory from \"./getNoiseFactory\";\r\nimport getLinearNoiseFactory from \"./getLinearNoiseFactory\";\r\n\r\nexport default function getTileFactory(info) {\r\n  const { seed, width, height, random } = info;\r\n\r\n  const cache = {};\r\n\r\n  const getSandNoise = getNoiseFactory({\r\n    width,\r\n    height,\r\n    seed: seed * 10\r\n  });\r\n\r\n  const getRainfallNoise = getNoiseFactory({\r\n    width,\r\n    height,\r\n    seed: seed * 20\r\n  });\r\n\r\n  const getElevationNoise = getNoiseFactory({\r\n    width,\r\n    height,\r\n    seed: seed * 30\r\n  });\r\n\r\n  const getVegetationNoise = getNoiseFactory({\r\n    width,\r\n    height,\r\n    seed: seed * 40\r\n  });\r\n\r\n  const getTemperatureNoise = getLinearNoiseFactory({\r\n    width,\r\n    height,\r\n    seed: seed * 50,\r\n    size: Math.floor(height * 0.4),\r\n    position: random.integer({\r\n      min: Math.floor(height * 0.4),\r\n      max: Math.floor(height * 0.6)\r\n    })\r\n  });\r\n\r\n  return function getTile(x, y) {\r\n    const id = `${x}=${y}`;\r\n    if (cache[id] != null) return cache[id];\r\n\r\n    cache[id] = new Tile({\r\n      x,\r\n      y,\r\n      random,\r\n      sand: getSandNoise(x, y),\r\n      rainfall: getRainfallNoise(x, y),\r\n      elevation: getElevationNoise(x, y),\r\n      vegetation: getVegetationNoise(x, y),\r\n      temperature: getTemperatureNoise(x, y)\r\n    });\r\n\r\n    return cache[id];\r\n  };\r\n}\r\n","import getNoiseFactory from \"./getNoiseFactory\";\r\n\r\nexport default function getLinearNoiseFactory(props) {\r\n  const { seed, size, width, height, position } = props;\r\n\r\n  const getNoise = getNoiseFactory({\r\n    seed,\r\n    width,\r\n    height\r\n  });\r\n\r\n  return function getLinearNoise(x, y) {\r\n    const lowerLimit = position - size;\r\n    const higherLimit = position + size;\r\n\r\n    if (y >= lowerLimit && y <= higherLimit) return 1;\r\n\r\n    return (\r\n      (y < lowerLimit\r\n        ? y / lowerLimit\r\n        : 1 - (y - higherLimit) / (height - higherLimit)) -\r\n      getNoise(x, y) / 2\r\n    );\r\n  };\r\n}\r\n","import { Name } from \"name-df-generator\";\n\nexport default class Road {\n  constructor(props) {\n    const { world, coordinates } = props;\n\n    this._world = world;\n    this._id = this.random.guid();\n    this._coordinates = coordinates;\n    this._name = new Name({ seed: this._id });\n\n    this._type = this.random.pickone([\n      \"Road\",\n      \"Street\",\n      \"Way\",\n      \"Avenue\",\n      \"Lane\",\n      \"Grove\"\n    ]);\n  }\n\n  get world() {\n    return this._world;\n  }\n\n  get random() {\n    return this._world.random;\n  }\n\n  get id() {\n    return this._id;\n  }\n\n  get name() {\n    return `${this._name} ${this._type}`;\n  }\n\n  get coordinates() {\n    return [...this._coordinates];\n  }\n}\n","import newMap from \"binos\";\r\nimport Chance from \"chance\";\r\nimport { Name } from \"name-df-generator\";\r\n\r\nimport Culture from \"./Culture\";\r\nimport tileTypes from \"./tileTypes\";\r\nimport { Chronicle } from \"./chronicles\";\r\nimport paintLine from \"./utils/paintLine\";\r\nimport getTileFactory from \"./factories/getTileFactory\";\r\n\r\nimport cultureCreationStory from \"./stories/world/culture-creation\";\r\nimport Road from \"./Road\";\r\n\r\nexport default class World {\r\n  constructor(props = {}) {\r\n    const { seed, canvas, offset = 15, onTownSelection } = props;\r\n\r\n    this._random = new Chance(seed);\r\n    this._id = this._random.guid();\r\n\r\n    this._roads = [];\r\n    this._year = 1000;\r\n    this._cultures = [];\r\n    this._chronicles = new Chronicle();\r\n    this._name = new Name({ seed: this._id });\r\n\r\n    this._offset = offset;\r\n    this._canvas = canvas;\r\n    this._random = new Chance(seed);\r\n    this._onTownSelection = onTownSelection;\r\n    this._context = setupContext(canvas, (x, y) => this.handleClick(x, y));\r\n\r\n    this.getTile = getTileFactory({\r\n      seed,\r\n      width: this.width,\r\n      height: this.height,\r\n      random: this._random\r\n    });\r\n\r\n    this._cache = {\r\n      mapEntities: {}\r\n    };\r\n  }\r\n\r\n  get id() {\r\n    return this._id;\r\n  }\r\n\r\n  get name() {\r\n    return this._name.toString();\r\n  }\r\n\r\n  get random() {\r\n    return this._random;\r\n  }\r\n\r\n  get cultures() {\r\n    return [...this._cultures];\r\n  }\r\n\r\n  get roads() {\r\n    return [...this._roads];\r\n  }\r\n\r\n  get width() {\r\n    return Math.floor(this._canvas.width / this._offset);\r\n  }\r\n\r\n  get height() {\r\n    return Math.floor(this._canvas.height / this._offset);\r\n  }\r\n\r\n  get year() {\r\n    return this._year;\r\n  }\r\n\r\n  get chronicles() {\r\n    return this._chronicles;\r\n  }\r\n\r\n  getMapEntityAt(x, y) {\r\n    return this._cache.mapEntities[`${x}:${y}`];\r\n  }\r\n\r\n  registerMapEntity(entity) {\r\n    if (this.getMapEntityAt(entity.x, entity.y) != null) {\r\n      throw new Error(\"coordinates already occupied\");\r\n    }\r\n\r\n    this._cache.mapEntities[`${entity.x}:${entity.y}`] = entity;\r\n  }\r\n\r\n  getHabitableCoords(info = {}) {\r\n    const fromX = info.fromX == null ? 0 : Math.max(0, info.fromX);\r\n    const fromY = info.fromY == null ? 0 : Math.max(0, info.fromY);\r\n    const toX =\r\n      info.toX == null ? this.width - 1 : Math.min(this.width - 1, info.toX);\r\n    const toY =\r\n      info.toY == null ? this.height - 1 : Math.min(this.height - 1, info.toY);\r\n\r\n    let attempts = 0;\r\n\r\n    while (attempts < 10) {\r\n      const x = this._random.integer({\r\n        min: fromX,\r\n        max: toX\r\n      });\r\n\r\n      const y = this._random.integer({\r\n        min: fromY,\r\n        max: toY\r\n      });\r\n\r\n      if (this.getMapEntityAt(x, y) != null) continue;\r\n\r\n      const tile = this.getTile(x, y);\r\n\r\n      if (\r\n        [\r\n          tileTypes.WATER,\r\n          tileTypes.OCEAN,\r\n          tileTypes.OCEAN_ICE,\r\n          tileTypes.WATER_ICE,\r\n          tileTypes.MOUNTAIN_ICE\r\n        ].includes(tile.type) === true\r\n      )\r\n        continue;\r\n\r\n      return { x, y };\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  handleClick(xProp, yProp) {\r\n    const x = Math.floor(xProp / this._offset);\r\n    const y = Math.floor(yProp / this._offset);\r\n\r\n    const chosenMapEntity = Object.values(this._cache.mapEntities).reduce(\r\n      (chosenMapEntity, mapEntity) => {\r\n        const distance = mapEntity.getDistance(x, y);\r\n\r\n        if (distance > 1) return chosenMapEntity;\r\n\r\n        if (chosenMapEntity == null) return mapEntity;\r\n\r\n        return chosenMapEntity.getDistance(x, y) > mapEntity.getDistance(x, y)\r\n          ? mapEntity\r\n          : chosenMapEntity;\r\n      },\r\n      null\r\n    );\r\n\r\n    if (chosenMapEntity == null) return;\r\n\r\n    this._onTownSelection(\r\n      this._chronicles.getActor(\"town\", chosenMapEntity.id)\r\n    );\r\n  }\r\n\r\n  addEvent(description, entities = []) {\r\n    this._chronicles.add(this._year, description, entities);\r\n  }\r\n\r\n  createRoad(source, destination) {\r\n    const xTo = Math.max(source.x, destination.x);\r\n    const xFrom = Math.min(source.x, destination.x);\r\n    const yTo = Math.max(source.y, destination.y);\r\n    const yFrom = Math.min(source.y, destination.y);\r\n\r\n    const surroundingTiles = [];\r\n\r\n    for (let y = yFrom; y <= yTo; y++) {\r\n      for (let x = xFrom; x <= xTo; x++) {\r\n        const currentTile = this.getTile(x, y);\r\n\r\n        surroundingTiles.push({\r\n          x,\r\n          y,\r\n          weight:\r\n            currentTile.type === tileTypes.MOUNTAIN_ICE\r\n              ? 0.9\r\n              : currentTile.type === tileTypes.MOUNTAIN\r\n              ? 0.9\r\n              : currentTile.type === tileTypes.HILL_ICE\r\n              ? 0.7 + this._random.floating({ min: 0, max: 0.4 })\r\n              : currentTile.type === tileTypes.HILL\r\n              ? 0.5 + this._random.floating({ min: 0, max: 0.6 })\r\n              : currentTile.type === tileTypes.HILL_SWAMP\r\n              ? 0.7 + this._random.floating({ min: 0, max: 0.4 })\r\n              : currentTile.type === tileTypes.HILL_GRASS\r\n              ? 0.6 + this._random.floating({ min: 0, max: 0.5 })\r\n              : currentTile.type === tileTypes.HILL_SOIL\r\n              ? 0.6 + this._random.floating({ min: 0, max: 0.5 })\r\n              : currentTile.type === tileTypes.HILL_SAND\r\n              ? 0.8 + this._random.floating({ min: 0, max: 0.3 })\r\n              : currentTile.type === tileTypes.PLAIN_ICE\r\n              ? 0.4 + this._random.floating({ min: 0, max: 0.7 })\r\n              : currentTile.type === tileTypes.PLAIN_SWAMP\r\n              ? 0.6 + this._random.floating({ min: 0, max: 0.5 })\r\n              : currentTile.type === tileTypes.PLAIN_FOREST\r\n              ? 0.5 + this._random.floating({ min: 0, max: 0.6 })\r\n              : currentTile.type === tileTypes.PLAIN_GRASS\r\n              ? 0.4 + this._random.floating({ min: 0, max: 0.7 })\r\n              : currentTile.type === tileTypes.PLAIN_SOIL\r\n              ? 0.4 + this._random.floating({ min: 0, max: 0.7 })\r\n              : currentTile.type === tileTypes.PLAIN_SAND\r\n              ? 0.6 + this._random.floating({ min: 0, max: 0.5 })\r\n              : currentTile.type === tileTypes.PLAIN_MARSH\r\n              ? 0.6 + this._random.floating({ min: 0, max: 0.5 })\r\n              : currentTile.type === tileTypes.PLAIN\r\n              ? 0.4 + this._random.floating({ min: 0, max: 0.6 })\r\n              : currentTile.type === tileTypes.WATER\r\n              ? 1\r\n              : currentTile.type === tileTypes.WATER_ICE\r\n              ? 0.9 + this._random.floating({ min: 0, max: 0.2 })\r\n              : currentTile.type === tileTypes.OCEAN\r\n              ? 1\r\n              : currentTile.type === tileTypes.OCEAN_ICE\r\n              ? 0.9 + this._random.floating({ min: 0, max: 0.2 })\r\n              : 1\r\n        });\r\n      }\r\n    }\r\n\r\n    const coordinates = newMap(surroundingTiles)(source, destination, {\r\n      diagonals: false,\r\n      calculateG: (nodeOne, nodeTwo) => {\r\n        const distance = Math.sqrt(\r\n          Math.pow(nodeOne.x - nodeTwo.x, 2) +\r\n            Math.pow(nodeOne.y - nodeTwo.y, 2)\r\n        );\r\n\r\n        const tileOne = this.getTile(nodeOne.x, nodeOne.y);\r\n        const tileTwo = this.getTile(nodeTwo.x, nodeTwo.y);\r\n\r\n        const elevation = Math.abs(tileOne.elevation - tileTwo.elevation);\r\n\r\n        return distance + elevation;\r\n      }\r\n    }).reverse();\r\n\r\n    coordinates.pop();\r\n    coordinates.splice(0, 1);\r\n\r\n    const newRoad = new Road({\r\n      coordinates,\r\n      world: this\r\n    });\r\n\r\n    this._roads.push(newRoad);\r\n\r\n    return newRoad;\r\n  }\r\n\r\n  createCultures(...culturesInfo) {\r\n    const newCulture = culturesInfo.map((cultureInfo = {}) => {\r\n      const newCulture = new Culture({\r\n        ...cultureInfo,\r\n        world: this\r\n      });\r\n\r\n      return newCulture;\r\n    });\r\n\r\n    this._cultures.push(...newCulture);\r\n\r\n    return newCulture;\r\n  }\r\n\r\n  draw() {\r\n    for (let y = 0; y < this.height; y++) {\r\n      for (let x = 0; x < this.width; x++) {\r\n        const tile = this.getTile(x, y);\r\n\r\n        const positionX = x * this._offset;\r\n        const positionY = y * this._offset;\r\n\r\n        const mapEntity = this.getMapEntityAt(x, y);\r\n\r\n        const ui = mapEntity == null ? tile.ui : mapEntity.ui;\r\n\r\n        this._context.fillStyle = ui.backgroundColor;\r\n\r\n        this._context.fillRect(positionX - 8, positionY - 9, 20, 20);\r\n\r\n        this._context.fillStyle = ui.color;\r\n        this._context.fillText(ui.icon, positionX, positionY);\r\n      }\r\n    }\r\n\r\n    paintLine({\r\n      color: \"#978169\",\r\n      offset: this._offset,\r\n      context: this._context,\r\n      coordinates: this._roads.map((road) => road.coordinates)\r\n    });\r\n  }\r\n\r\n  tick() {\r\n    this._year += 1;\r\n\r\n    cultureCreationStory(this);\r\n\r\n    this._cultures.forEach((culture) => {\r\n      culture.tick();\r\n    });\r\n  }\r\n}\r\n\r\nfunction setupContext(canvas, onClick) {\r\n  const context = canvas.getContext(\"2d\");\r\n\r\n  context.textAlign = \"center\";\r\n  context.font = \"10px monospace\";\r\n  context.lineCap = \"round\";\r\n  context.lineJoin = \"round\";\r\n\r\n  function getCursorPosition(ev) {\r\n    const rect = canvas.getBoundingClientRect();\r\n    const x = ev.clientX - rect.left;\r\n    const y = ev.clientY - rect.top;\r\n    onClick(x, y);\r\n  }\r\n\r\n  canvas.addEventListener(\"click\", function (e) {\r\n    getCursorPosition(e);\r\n  });\r\n\r\n  return context;\r\n}\r\n","export default function paintLine(props) {\n  const { offset, context, coordinates, color } = props;\n\n  [\n    ({\n      width: 10,\n      color: \"#222\"\n    },\n    {\n      width: 2,\n      color: color\n    })\n  ].forEach((info) => {\n    context.strokeStyle = info.color;\n    context.lineWidth = info.width;\n\n    coordinates.forEach((coordinate) => {\n      context.beginPath();\n\n      coordinate.forEach((coords) => {\n        context.lineTo(coords.x * offset, coords.y * offset - 2);\n      });\n\n      context.stroke();\n    });\n  });\n}\n","import { Culture as CultureActor } from \"../../chronicles\";\r\n\r\nexport default function worldCultureCreation(world) {\r\n  if (world.cultures.length > 4) return;\r\n\r\n  world\r\n    .createCultures(\r\n      ...Array(\r\n        world.random.integer({\r\n          min: 0,\r\n          max: 2\r\n        })\r\n      )\r\n        .fill()\r\n        .map(() => ({\r\n          seed: world.random.guid()\r\n        }))\r\n    )\r\n    .forEach((newCulture) => {\r\n      world.addEvent(\"The people of {0} started writing history\", [\r\n        new CultureActor(newCulture)\r\n      ]);\r\n    });\r\n}\r\n","import React from \"react\";\r\n\r\nexport default React.createContext();\r\n","import React from \"react\";\nimport AppContext from \"./AppContext\";\n\nimport \"./AppTime.css\";\n\nfunction AppTime() {\n  const { world } = React.useContext(AppContext);\n  const [year, setYear] = React.useState(world == null ? 0 : world.year);\n\n  const onClick = React.useCallback(() => {\n    if (world == null) return;\n\n    Array(5)\n      .fill()\n      .forEach(() => {\n        world.tick();\n        setYear(world.year);\n      });\n\n    world.draw();\n  }, [world]);\n\n  React.useEffect(() => {\n    onClick();\n  }, [onClick]);\n\n  return (\n    world != null && (\n      <div className=\"AppTime\">\n        <strong>{world.name}</strong>\n        <div>Year: {year}</div>\n        <button onClick={onClick} className=\"AppTimeTicker\">\n          Proceed\n        </button>\n      </div>\n    )\n  );\n}\n\nexport default React.memo(AppTime);\n","import React from \"react\";\r\n\r\nimport \"./Tabs.css\";\r\n\r\nfunction Tabs(props) {\r\n  const { tabs = [] } = props;\r\n\r\n  const [selectedTab, setSelectedTab] = React.useState(0);\r\n\r\n  const tabItems = React.useMemo(() => {\r\n    return tabs.map((tab, index) => {\r\n      const classes = [\"TabsNavigationItem\"];\r\n\r\n      if (index === selectedTab) classes.push(\"TabsNavigationItem--Active\");\r\n\r\n      return (\r\n        <li\r\n          tabIndex={0}\r\n          role=\"button\"\r\n          className={classes.join(\" \")}\r\n          onClick={() => setSelectedTab(index)}\r\n        >\r\n          {tab.label}\r\n        </li>\r\n      );\r\n    });\r\n  }, [tabs, selectedTab]);\r\n\r\n  const content = React.useMemo(() => {\r\n    return tabs[selectedTab].content;\r\n  }, [tabs, selectedTab]);\r\n\r\n  return (\r\n    <div className=\"Tabs\">\r\n      <nav>\r\n        <ul className=\"TabsNavigation\">{tabItems}</ul>\r\n      </nav>\r\n\r\n      <div className=\"TabsContent\">{content}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(Tabs);\r\n","import React from \"react\";\r\n\r\nimport AppContext from \"./AppContext\";\r\n\r\nimport \"./Actor.css\";\r\n\r\nfunction Actor(props) {\r\n  const { type, actorID } = props;\r\n\r\n  const { world, setSelectedActorInfo } = React.useContext(AppContext);\r\n\r\n  const actor = React.useMemo(() => {\r\n    return world.chronicles.getActor(type, actorID);\r\n  }, [type, world, actorID]);\r\n\r\n  const onClick = React.useCallback(() => {\r\n    setSelectedActorInfo({\r\n      type,\r\n      entity: actor\r\n    });\r\n  }, [type, actor, setSelectedActorInfo]);\r\n\r\n  return (\r\n    <span onClick={onClick} className=\"Actor\">\r\n      {actor.label}\r\n    </span>\r\n  );\r\n}\r\n\r\nexport default React.memo(Actor);\r\n","import React from \"react\";\r\n\r\nimport \"./Dialog.css\";\r\n\r\nfunction Dialog(props) {\r\n  const { width = \"500px\", onClose: onCloseProp } = props;\r\n\r\n  const onClose = React.useCallback(\r\n    (...args) => {\r\n      if (typeof onCloseProp !== \"function\") return;\r\n      onCloseProp(...args);\r\n    },\r\n    [onCloseProp]\r\n  );\r\n\r\n  return (\r\n    <div role=\"dialog\" className=\"Dialog\">\r\n      <div style={{ width }} className=\"DialogContainer\">\r\n        <div\r\n          tabIndex={0}\r\n          role=\"button\"\r\n          onClick={onClose}\r\n          aria-label=\"Close Dialog\"\r\n          className=\"DialogContainerClose\"\r\n        >\r\n          x\r\n        </div>\r\n\r\n        {props.children}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(Dialog);\r\n","import React from \"react\";\r\nimport { genders } from \"culture-generator\";\r\nimport Actor from \"./Actor\";\r\n\r\nfunction TownNoblesTabContent(props) {\r\n  const { town } = props;\r\n\r\n  const adventurers = React.useMemo(() => {\r\n    return town.entity.adventurers.map((adventurer) => {\r\n      return (\r\n        <li>\r\n          <Actor type=\"adventurer\" actorID={adventurer.id} />\r\n          {adventurer.getAge(town.entity.world.year) < 18 && \" ☺ \"}\r\n          {adventurer.gender === genders.MALE ? \" ♂ \" : \" ♀ \"}\r\n          {adventurer.getAge(town.entity.world.year)}\r\n        </li>\r\n      );\r\n    });\r\n  }, [town]);\r\n\r\n  return <ul>{adventurers}</ul>;\r\n}\r\n\r\nexport default React.memo(TownNoblesTabContent);\r\n","import React from \"react\";\nimport Actor from \"./Actor\";\n\nfunction TownTitlesTabContent(props) {\n  const { town: townProp } = props;\n\n  const town = React.useMemo(() => {\n    return townProp.entity;\n  }, [townProp]);\n\n  return React.useMemo(() => {\n    const titles = town.titles;\n    return Object.keys(titles).map((title) => {\n      return (\n        <div>\n          <h4 className=\"TabsContentTitle\">{title}</h4>\n          {titles[title] == null ? (\n            <center>N/A</center>\n          ) : (\n            <Actor type=\"adventurer\" actorID={titles[title].id} />\n          )}\n        </div>\n      );\n    });\n  }, [town]);\n}\n\nexport default React.memo(TownTitlesTabContent);\n","import React from \"react\";\r\nimport Actor from \"./Actor\";\r\nimport AppContext from \"./AppContext\";\r\n\r\nfunction ActorHistoryTabContent(props) {\r\n  const { actorID, type } = props;\r\n\r\n  const { world } = React.useContext(AppContext);\r\n\r\n  const actor = React.useMemo(() => {\r\n    return world.chronicles.getActor(type, actorID);\r\n  }, [type, actorID, world]);\r\n\r\n  const eventsDOM = React.useMemo(() => {\r\n    return actor.years\r\n      .reduce((eventsDOM, year) => {\r\n        const events = actor\r\n          .getYear(year)\r\n          .map(({ event }) => {\r\n            const description = event.actors.reduce(\r\n              (description, actor, index) => {\r\n                const placeholder = `{${index}}`;\r\n\r\n                description.forEach((token, index) => {\r\n                  if (token === placeholder) {\r\n                    description[index] = (\r\n                      <Actor type={actor.type} actorID={actor.id} />\r\n                    );\r\n                  }\r\n                });\r\n\r\n                return description;\r\n              },\r\n              event.description.split(\" \")\r\n            );\r\n\r\n            return (\r\n              <li key={`event${event.description}`}>\r\n                {description.map((token) => {\r\n                  return typeof token !== \"string\" ? token : ` ${token} `;\r\n                })}\r\n              </li>\r\n            );\r\n          })\r\n          .reverse();\r\n\r\n        eventsDOM.push(\r\n          <div key={`year-${year}`}>\r\n            <h4 className=\"TabsContentTitle\">Year: {year}</h4>\r\n            <ul>{events}</ul>\r\n          </div>\r\n        );\r\n\r\n        return eventsDOM;\r\n      }, [])\r\n      .reverse();\r\n  }, [actor]);\r\n\r\n  return <div>{eventsDOM}</div>;\r\n}\r\n\r\nexport default React.memo(ActorHistoryTabContent);\r\n","import React from \"react\";\r\n\r\nimport Tabs from \"./Tabs\";\r\nimport Actor from \"./Actor\";\r\nimport Dialog from \"./Dialog\";\r\nimport TownNoblesTabContent from \"./TownNoblesTabContent\";\r\nimport TownTitlesTabContent from \"./TownTitlesTabContent\";\r\nimport ActorHistoryTabContent from \"./ActorHistoryTabContent\";\r\n\r\nimport \"./TownDialog.css\";\r\n\r\nfunction TownDialog(props) {\r\n  const { town } = props;\r\n\r\n  const tabs = React.useMemo(() => {\r\n    return [\r\n      {\r\n        label: \"History\",\r\n        content: <ActorHistoryTabContent type=\"town\" actorID={town.id} />\r\n      },\r\n      {\r\n        label: \"Nobles\",\r\n        content: <TownNoblesTabContent town={town} />\r\n      },\r\n      {\r\n        label: \"Titles\",\r\n        content: <TownTitlesTabContent town={town} />\r\n      }\r\n    ];\r\n  }, [town]);\r\n\r\n  return (\r\n    <Dialog {...props}>\r\n      <header className=\"DialogHeader\">\r\n        <img\r\n          width=\"50\"\r\n          height=\"50\"\r\n          className=\"TownDialogHeraldry\"\r\n          alt={`${town.label} Heraldry`}\r\n          src={`http://armoria.herokuapp.com/png/50/${town.id}?shield=french`}\r\n        />\r\n\r\n        <div>\r\n          <h2 className=\"TownDialogHeaderTitle\">{town.label}</h2>\r\n\r\n          <h3 className=\"TownDialogHeaderSubtitle\">\r\n            <Actor type=\"culture\" actorID={town.entity.culture.id} />\r\n          </h3>\r\n        </div>\r\n      </header>\r\n\r\n      <div className=\"DialogContent\">\r\n        <Tabs tabs={tabs} />\r\n      </div>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default React.memo(TownDialog);\r\n","import React from \"react\";\nimport { ToWords } from \"to-words\";\n\nimport { genders } from \"culture-generator\";\n\nimport Actor from \"./Actor\";\nimport AppContext from \"./AppContext\";\n\nfunction AdventurerFamilyTabContent(props) {\n  const { adventurer: adventurerProp } = props;\n\n  const { world } = React.useContext(AppContext);\n\n  const toWords = React.useMemo(() => {\n    return new ToWords();\n  }, []);\n\n  const adventurer = React.useMemo(() => {\n    return adventurerProp.entity;\n  }, [adventurerProp]);\n\n  const dob = React.useMemo(() => {\n    const pronoun = adventurer.gender === genders.MALE ? \"He\" : \"She\";\n\n    const age = toWords.convert(adventurer.getAge(world.year)).toLowerCase();\n\n    return (\n      <p>\n        {pronoun} is {age} years old, born on in {world.year} and is from the{\" \"}\n        <Actor type=\"culture\" actorID={adventurer.culture.id} /> civilization.\n      </p>\n    );\n  }, [adventurer, toWords, world]);\n\n  const parentsDOM = React.useMemo(() => {\n    if (adventurer.parents.length === 0) return;\n\n    const pronoun = adventurer.gender === genders.MALE ? \"He is\" : \"She is\";\n\n    const son = adventurer.gender === genders.MALE ? \"son\" : \"daughter\";\n\n    return (\n      <p>\n        {pronoun} the {son} of{\" \"}\n        <Actor type=\"adventurer\" actorID={adventurer.father.id} /> and{\" \"}\n        <Actor type=\"adventurer\" actorID={adventurer.mother.id} />.\n      </p>\n    );\n  }, [adventurer]);\n\n  const spouseDOM = React.useMemo(() => {\n    const pronoun = adventurer.gender === genders.MALE ? \"He is\" : \"She is\";\n\n    const spouseDOM = [];\n\n    if (adventurer.spouse != null) {\n      spouseDOM.push(\n        <span>\n          {pronoun} married to{\" \"}\n          <Actor type=\"adventurer\" actorID={adventurer.spouse.id} />\n        </span>\n      );\n    }\n\n    const children = adventurer.children.map((adventurer) => {\n      return <Actor type=\"adventurer\" actorID={adventurer.id} />;\n    });\n\n    if (children.length > 0) {\n      spouseDOM.push(\n        <span>\n          {\" \"}\n          and has {toWords\n            .convert(adventurer.children.length)\n            .toLowerCase()}{\" \"}\n          {children.length === 1 ? \"child\" : \"children\"}\n        </span>\n      );\n    }\n\n    return spouseDOM.length === 0 ? null : <p>{spouseDOM}.</p>;\n  }, [adventurer, toWords]);\n\n  return (\n    <>\n      {dob}\n      {parentsDOM}\n      {spouseDOM}\n      <p>{adventurer.appearance}.</p>\n      <p>{adventurer.bodyAttributes}.</p>\n      <p>{adventurer.soulAttributes}.</p>\n      <p>{adventurer.facets}.</p>\n    </>\n  );\n}\n\nexport default React.memo(AdventurerFamilyTabContent);\n","import React from \"react\";\nimport Actor from \"./Actor\";\n\nfunction AdventurerFamilyTabContent(props) {\n  const { adventurer } = props;\n\n  const familyDOM = React.useMemo(() => {\n    return [\n      {\n        name: \"Spouse\",\n        adventurers:\n          adventurer.entity.spouse == null ? [] : [adventurer.entity.spouse]\n      },\n      {\n        name: \"Children\",\n        adventurers: adventurer.entity.children\n      },\n      {\n        name: \"Parents\",\n        adventurers: adventurer.entity.parents\n      },\n      {\n        name: \"Siblings\",\n        adventurers: adventurer.entity.siblings\n      },\n      {\n        name: \"Grandparents\",\n        adventurers: adventurer.entity.grandparents\n      },\n      {\n        name: \"Uncle/Aunties\",\n        adventurers: adventurer.entity.piblings\n      },\n      {\n        name: \"Cousins\",\n        adventurers: adventurer.entity.cousins\n      }\n    ].reduce((familyDOM, info) => {\n      familyDOM.push(\n        <div key={`family-${info.name}`}>\n          <h3 className=\"TabsContentTitle\">{info.name}</h3>\n\n          {info.adventurers.length === 0 ? (\n            <center>N/A</center>\n          ) : (\n            <ul>\n              {info.adventurers.map((adventurer) => {\n                return (\n                  <li>\n                    <Actor type=\"adventurer\" actorID={adventurer.id} />\n                  </li>\n                );\n              })}\n            </ul>\n          )}\n        </div>\n      );\n\n      return familyDOM;\n    }, []);\n  }, [adventurer]);\n\n  return familyDOM;\n}\n\nexport default React.memo(AdventurerFamilyTabContent);\n","import React from \"react\";\r\n\r\nimport Tabs from \"./Tabs\";\r\nimport Dialog from \"./Dialog\";\r\nimport ActorHistoryTabContent from \"./ActorHistoryTabContent\";\r\nimport AdventurerInfoTabContent from \"./AdventurerInfoTabContent\";\r\nimport AdventurerFamilyTabContent from \"./AdventurerFamilyTabContent\";\r\n\r\nfunction AdventurerDialog(props) {\r\n  const { adventurer } = props;\r\n\r\n  const tabs = React.useMemo(() => {\r\n    return [\r\n      {\r\n        label: \"Info\",\r\n        content: <AdventurerInfoTabContent adventurer={adventurer} />\r\n      },\r\n      {\r\n        label: \"History\",\r\n        content: (\r\n          <ActorHistoryTabContent type=\"adventurer\" actorID={adventurer.id} />\r\n        )\r\n      },\r\n      {\r\n        label: \"Family\",\r\n        content: <AdventurerFamilyTabContent adventurer={adventurer} />\r\n      }\r\n    ];\r\n  }, [adventurer]);\r\n\r\n  return (\r\n    <Dialog {...props}>\r\n      <header className=\"DialogHeader\">\r\n        <div>\r\n          <h2 className=\"TownDialogHeaderTitle\">{adventurer.label}</h2>\r\n        </div>\r\n      </header>\r\n\r\n      <div className=\"DialogContent\">\r\n        <Tabs tabs={tabs} />\r\n      </div>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default React.memo(AdventurerDialog);\r\n","import React from \"react\";\n\nfunction CultureInfoTabContent(props) {\n  const { culture: cultureProp } = props;\n\n  const culture = React.useMemo(() => {\n    return cultureProp.entity;\n  }, [cultureProp]);\n\n  return (\n    <>\n      <div>\n        <h3 className=\"TabsContentTitle\">Ethics</h3>\n        <p>{culture.ethics.toString()}</p>\n      </div>\n      <div>\n        <h3 className=\"TabsContentTitle\">Beliefs</h3>\n        <p>{culture.beliefs.toString()}</p>\n      </div>\n    </>\n  );\n}\n\nexport default React.memo(CultureInfoTabContent);\n","import React from \"react\";\nimport Actor from \"./Actor\";\n\nfunction CultureTownsTabContent(props) {\n  const { culture: cultureProp } = props;\n\n  const culture = React.useMemo(() => {\n    return cultureProp.entity;\n  }, [cultureProp]);\n\n  return React.useMemo(() => {\n    const towns = culture.towns;\n\n    return towns.length === 0 ? (\n      <center>N/A</center>\n    ) : (\n      <ul>\n        {towns.map((town) => {\n          return (\n            <li>\n              <Actor type=\"town\" actorID={town.id} />\n            </li>\n          );\n        })}\n      </ul>\n    );\n  }, [culture]);\n}\n\nexport default React.memo(CultureTownsTabContent);\n","import React from \"react\";\nimport Actor from \"./Actor\";\n\nfunction CultureTitlesTabContent(props) {\n  const { culture: cultureProp } = props;\n\n  const culture = React.useMemo(() => {\n    return cultureProp.entity;\n  }, [cultureProp]);\n\n  return React.useMemo(() => {\n    const titles = culture.titles;\n\n    return Object.keys(titles).map((title) => {\n      return (\n        <div>\n          <h4 className=\"TabsContentTitle\">{title}</h4>\n          {titles[title] == null ? (\n            <center>N/A</center>\n          ) : (\n            <Actor type=\"adventurer\" actorID={titles[title].id} />\n          )}\n        </div>\n      );\n    });\n  }, [culture]);\n}\n\nexport default React.memo(CultureTitlesTabContent);\n","import React from \"react\";\nimport Actor from \"./Actor\";\n\nfunction CultureOpinionsTabContent(props) {\n  const { culture: cultureProp } = props;\n\n  const culture = React.useMemo(() => {\n    return cultureProp.entity;\n  }, [cultureProp]);\n\n  return React.useMemo(() => {\n    const cultures = culture.world.cultures;\n\n    return cultures.length === 1 ? (\n      \"N/A\"\n    ) : (\n      <ul>\n        {cultures.reduce((culturesDOM, otherCulture) => {\n          if (otherCulture === culture) return culturesDOM;\n\n          culturesDOM.push(\n            <li>\n              <Actor type=\"culture\" actorID={otherCulture.id} />:{\" \"}\n              {culture.getOpinion(otherCulture)}\n            </li>\n          );\n\n          return culturesDOM;\n        }, [])}\n      </ul>\n    );\n  }, [culture]);\n}\n\nexport default React.memo(CultureOpinionsTabContent);\n","import React from \"react\";\n\nimport Tabs from \"./Tabs\";\nimport Dialog from \"./Dialog\";\nimport CultureInfoTabContent from \"./CultureInfoTabContent\";\nimport ActorHistoryTabContent from \"./ActorHistoryTabContent\";\nimport CultureTownsTabContent from \"./CultureTownsTabContent\";\nimport CultureTitlesTabContent from \"./CultureTitlesTabContent\";\nimport CultureOpinionsTabContent from \"./CultureOpinionsTabContent\";\n\nfunction CultureDialog(props) {\n  const { culture } = props;\n\n  const tabs = React.useMemo(() => {\n    return [\n      {\n        label: \"History\",\n        content: <ActorHistoryTabContent type=\"culture\" actorID={culture.id} />\n      },\n      {\n        label: \"Info\",\n        content: <CultureInfoTabContent culture={culture} />\n      },\n      {\n        label: \"Titles\",\n        content: <CultureTitlesTabContent culture={culture} />\n      },\n      {\n        label: \"Towns\",\n        content: <CultureTownsTabContent culture={culture} />\n      },\n      {\n        label: \"Diplo\",\n        content: <CultureOpinionsTabContent culture={culture} />\n      }\n    ];\n  }, [culture]);\n\n  return (\n    <Dialog {...props}>\n      <header className=\"DialogHeader\">\n        <img\n          width=\"50\"\n          height=\"50\"\n          className=\"TownDialogHeraldry\"\n          alt={`${culture.label} Heraldry`}\n          src={`http://armoria.herokuapp.com/png/50/${culture.id}?shield=french`}\n        />\n\n        <div>\n          <h2 className=\"TownDialogHeaderTitle\">{culture.label}</h2>\n        </div>\n      </header>\n\n      <div className=\"DialogContent\">\n        <Tabs tabs={tabs} />\n      </div>\n    </Dialog>\n  );\n}\n\nexport default React.memo(CultureDialog);\n","import React from \"react\";\n\nimport { World } from \"./lib\";\nimport AppTime from \"./AppTime\";\nimport TownDialog from \"./TownDialog\";\n\nimport \"./styles.css\";\nimport AppContext from \"./AppContext\";\nimport AdventurerDialog from \"./AdventurerDialog\";\nimport CultureDialog from \"./CultureDialog\";\n\nexport default function App() {\n  const canvasRef = React.useRef();\n  const [world, setWorld] = React.useState();\n  const [selectedActorInfo, setSelectedActorInfo] = React.useState();\n\n  React.useLayoutEffect(() => {\n    const world = new World({\n      canvas: canvasRef.current,\n      seed: \"idrinkandiknowthingsd\",\n\n      onTownSelection: (entity) => {\n        setSelectedActorInfo({\n          entity,\n          type: \"town\"\n        });\n      }\n    });\n\n    window.world = world;\n\n    setWorld(world);\n  }, []);\n\n  const onDialogClose = React.useCallback(() => {\n    setSelectedActorInfo(null);\n  }, []);\n\n  const dialogDOM = React.useMemo(() => {\n    if (selectedActorInfo == null) return;\n\n    const { type, entity } = selectedActorInfo;\n\n    switch (type) {\n      case \"town\": {\n        return <TownDialog town={entity} onClose={onDialogClose} />;\n      }\n      case \"adventurer\": {\n        return <AdventurerDialog adventurer={entity} onClose={onDialogClose} />;\n      }\n      case \"culture\": {\n        return <CultureDialog culture={entity} onClose={onDialogClose} />;\n      }\n      default:\n        return null;\n    }\n  }, [selectedActorInfo, onDialogClose]);\n\n  return (\n    <div className=\"App\">\n      <AppContext.Provider\n        value={{\n          world,\n          setSelectedActorInfo\n        }}\n      >\n        <AppTime />\n        {dialogDOM}\n        <canvas ref={canvasRef} width=\"2000\" height=\"2000\"></canvas>\n      </AppContext.Provider>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}